<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nicolás' blog</title><link>https://nicoguaro.github.io/</link><description>Personal blog and website</description><atom:link href="https://nicoguaro.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2022 &lt;a href="mailto:nicoguarin@gmail.com"&gt;Nicolás Guarín-Zapata&lt;/a&gt; 
&lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;
&lt;img alt="Creative Commons License"
style="border-width:0"
src="https://i.creativecommons.org/l/by/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Fri, 23 Sep 2022 19:34:35 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Using MikTex with LaTeX Workshop on Windows</title><link>https://nicoguaro.github.io/posts/latex_vscode_wind/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;This is a post to mention how to setup Visual Studio Code for LaTeX—through
the &lt;a class="reference external" href="https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop"&gt;LaTeX Workshop extension&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the past,  I have used several text editors and for LaTeX. A couple of years
ago I replaced &lt;a class="reference external" href="https://www.texstudio.org/"&gt;TeXstudio&lt;/a&gt; for VS Code, and I think
that it works just fine. &lt;a class="reference external" href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;
is one of the &lt;a class="reference external" href="https://insights.stackoverflow.com/survey/2019#development-environments-and-tools"&gt;most used IDE right now&lt;/a&gt;.
One advantage of using VS Code to type your documents is that you can set it up
to fit your workflow and use it for several languages/purposes. It is also
cross-platform, you will not be worrying for having different workflows in
Linux or Windows.&lt;/p&gt;
&lt;p&gt;You need to follow these steps to make it work:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Install Perl. You can use &lt;a class="reference external" href="https://strawberryperl.com/"&gt;Strawberry Perl&lt;/a&gt; in
Windows.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you don't have administrator privileges you can install the &lt;a class="reference external" href="https://strawberryperl.com/releases.html"&gt;portable
version&lt;/a&gt; and add the path to the
executable to the PATH environment variable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install MikTeX. The creator of LaTeX Workshop suggests to use TeX Live instead
because it already comes with Perl and you could skip one step in this list.
The disadvantages of using TeX Live instead of MikTeX are more
(see &lt;a class="reference external" href="https://tex.stackexchange.com/questions/20036/what-are-the-advantages-of-tex-live-over-miktex"&gt;here&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install &lt;a class="reference external" href="https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop"&gt;LaTeX Workshop&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="references"&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Cangemi, Denis. “The Reasons Why You Must Use Visual Studio Code.” Medium,
13 Aug. 2020, &lt;a class="reference external" href="https://blog.devgenius.io/the-reasons-why-you-must-use-visual-studio-code-b522f946a849"&gt;https://blog.devgenius.io/the-reasons-why-you-must-use-visual-studio-code-b522f946a849&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wright, Joseph. “TeX on Windows: TeX Live versus MiKTeX Revisited.” Some TeX
Developments, 18 Dec. 2016, &lt;a class="reference external" href="https://www.texdev.net/2016/12/18/tex-on-windows-tex-live-versus-miktex-revisited/"&gt;https://www.texdev.net/2016/12/18/tex-on-windows-tex-live-versus-miktex-revisited/&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;</description><category>latex</category><category>research</category><category>typography</category><category>visual-studio-code</category><category>writing</category><guid>https://nicoguaro.github.io/posts/latex_vscode_wind/</guid><pubDate>Fri, 23 Sep 2022 17:00:00 GMT</pubDate></item><item><title>Technical writing: Using Figures</title><link>https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;In a &lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing"&gt;previous post&lt;/a&gt; I mentioned some general aspects of
technical writing. In this one, I would like to talk about including
figures in technical documents.&lt;/p&gt;
&lt;p&gt;This post is about some details on the planning of figures for technical
documents. The main document in mind is a technical article (research paper,
techincal report). Although, it also applies to presentations or posters.&lt;/p&gt;
&lt;section id="graphic-formats"&gt;
&lt;h2&gt;Graphic formats&lt;/h2&gt;
&lt;p&gt;First, I should mention that there are two main types of graphics, namely:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;vector graphics; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;raster graphics.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They serve different purposes and we should use them accordingly. For example,
for diagrams or schematics is better to use vector formats, in general. On
the other hand, raster formats are better suited for images such as photographs
or illustrations.&lt;/p&gt;
&lt;section id="vector-graphics"&gt;
&lt;h3&gt;Vector graphics&lt;/h3&gt;
&lt;p&gt;A &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Vector_graphics"&gt;vector image&lt;/a&gt;
is an image that is made up of geometric entities. In this case, the
stored information is not point-to-point but &lt;em&gt;the construction&lt;/em&gt; of
the shapes that constitute it. For this reason, these images don't
&lt;em&gt;pixelate&lt;/em&gt; because the information you have is how to build it.
This type of images is the best options for schematics and diagrams,
since the only stored information are the strokes and text added to
them. The &lt;em&gt;de facto&lt;/em&gt; standard for this type of images is PDF —it is the one
I usually include in my documents \(\LaTeX\). Although PDF is the
&lt;em&gt;standard&lt;/em&gt;, the preferred format is &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Scalable_Vector_Graphics"&gt;SVG (Scalable Vector
Graphics)&lt;/a&gt;
which is a standard across the internet and most &lt;em&gt;modern&lt;/em&gt; browsers
let you render them.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="raster-graphics"&gt;
&lt;h3&gt;Raster graphics&lt;/h3&gt;
&lt;p&gt;A &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Raster_graphics"&gt;raster image&lt;/a&gt; is an image
which is represented by an array (or rectangular grid) of pixels. In other
words, the color information that there are in each point of the image. The
most popular formats store the compressed information. For high contrast
graphics (such as schematics or diagrams) the best format is PNG. If you have
an animation, GIF would be preferable. And in the case of photographs it is
better to use JPG.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="summary-for-formats"&gt;
&lt;h3&gt;Summary for formats&lt;/h3&gt;
&lt;p&gt;Summarizing, we should use JPG images (only) for photographs and SVG for
schematics/diagrams. Another attribute that may be useful is the management
of layers. Having several layers gives you the option of stacking different
types of information separately. For example, you can have the background,
the image, and the annotations in different layers. This way you can modify
only the part of the figure that concerns you. You can automate the translation
of the annotations this way without much problem. Formats such as SVG let you
have several layers. In the case of raster formats, we have the
option to use TIFF.&lt;/p&gt;
&lt;p&gt;Regarding software to generate/edit this type of images I must say that there
are a large number of programs that allow exporting to these formats:
Python/Matplotlib, Matlab, Inkscape, Adobe Illustrator, GIMP, Photoshop,
LibreOffice. If the graph is generated from a calculation or a data series I
use Matplotlib. If, instead, we want to make a schematic my tool of choice
is &lt;a class="reference external" href="http://www.inkscape.org/"&gt;Inkscape&lt;/a&gt;. This program is intended to be a
free alternative to programs like Adobe Illustrator —and it does achieve it.
Obviously, you could use Illustrator or Corel Draw for this task. If the only
use would be to make technical schematics, I think it would be a waste.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="designing-figures-for-documents"&gt;
&lt;h2&gt;Designing figures for documents&lt;/h2&gt;
&lt;p&gt;I suggest starting from the nominal size of the figure in the document. For
most of our documents, the figures will remain digital and this
might seem counterintuitive. Nevertheless, I find this approach much easier.
One of the reasons is that we still embed our figure in a document with a
nominal size. Also, when thinking about font size it is common that we have as
reference printed text. On top of that, we should consider that the human eye
has a resolution limit, so we can't just scale down our figures.&lt;/p&gt;
&lt;p&gt;Also, there is no such thing as resolution of a digital image. Resolution
refers to a density of pixels per unit length. This makes sense when printing
images, but not in the digital case. Nevertheless, the figures have a nominal
size and hence a nominal resolution. That is, the number of pixels in one
direction divided by its nominal size. It is a good idea to consider a
minimal resolution of 150 dpi (dots per inch). For example, an image of
6 in × 3 in. This image would have a size of (at 150 dpi) of de 900 px × 450 px.&lt;/p&gt;
&lt;p&gt;The following Python snippet creates a figure of size 6 in × 3 in, and plots
the function \(f(x) = \sin(x^2)\) and stores it as an image of size
900 in × 450 in.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_86721c8171904d50b896f15f823acc7b-1" name="rest_code_86721c8171904d50b896f15f823acc7b-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_86721c8171904d50b896f15f823acc7b-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;a id="rest_code_86721c8171904d50b896f15f823acc7b-2" name="rest_code_86721c8171904d50b896f15f823acc7b-2" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_86721c8171904d50b896f15f823acc7b-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;a id="rest_code_86721c8171904d50b896f15f823acc7b-3" name="rest_code_86721c8171904d50b896f15f823acc7b-3" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_86721c8171904d50b896f15f823acc7b-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;linewidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_86721c8171904d50b896f15f823acc7b-4" name="rest_code_86721c8171904d50b896f15f823acc7b-4" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_86721c8171904d50b896f15f823acc7b-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_86721c8171904d50b896f15f823acc7b-5" name="rest_code_86721c8171904d50b896f15f823acc7b-5" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_86721c8171904d50b896f15f823acc7b-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_86721c8171904d50b896f15f823acc7b-6" name="rest_code_86721c8171904d50b896f15f823acc7b-6" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_86721c8171904d50b896f15f823acc7b-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_86721c8171904d50b896f15f823acc7b-7" name="rest_code_86721c8171904d50b896f15f823acc7b-7" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_86721c8171904d50b896f15f823acc7b-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_86721c8171904d50b896f15f823acc7b-8" name="rest_code_86721c8171904d50b896f15f823acc7b-8" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_86721c8171904d50b896f15f823acc7b-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_86721c8171904d50b896f15f823acc7b-9" name="rest_code_86721c8171904d50b896f15f823acc7b-9" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_86721c8171904d50b896f15f823acc7b-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savefig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"fig_ex_python.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dpi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And the following in Matlab.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code matlab"&gt;&lt;a id="rest_code_2ba441483bc54b06b3d566b8762f8753-1" name="rest_code_2ba441483bc54b06b3d566b8762f8753-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_2ba441483bc54b06b3d566b8762f8753-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_2ba441483bc54b06b3d566b8762f8753-2" name="rest_code_2ba441483bc54b06b3d566b8762f8753-2" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_2ba441483bc54b06b3d566b8762f8753-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Units&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'inches'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_2ba441483bc54b06b3d566b8762f8753-3" name="rest_code_2ba441483bc54b06b3d566b8762f8753-3" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_2ba441483bc54b06b3d566b8762f8753-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_2ba441483bc54b06b3d566b8762f8753-4" name="rest_code_2ba441483bc54b06b3d566b8762f8753-4" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_2ba441483bc54b06b3d566b8762f8753-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_2ba441483bc54b06b3d566b8762f8753-5" name="rest_code_2ba441483bc54b06b3d566b8762f8753-5" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_2ba441483bc54b06b3d566b8762f8753-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_2ba441483bc54b06b3d566b8762f8753-6" name="rest_code_2ba441483bc54b06b3d566b8762f8753-6" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_2ba441483bc54b06b3d566b8762f8753-6"&gt;&lt;/a&gt;&lt;span class="nb"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'LineWidth'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_2ba441483bc54b06b3d566b8762f8753-7" name="rest_code_2ba441483bc54b06b3d566b8762f8753-7" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_2ba441483bc54b06b3d566b8762f8753-7"&gt;&lt;/a&gt;&lt;span class="nb"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'FontSize'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_2ba441483bc54b06b3d566b8762f8753-8" name="rest_code_2ba441483bc54b06b3d566b8762f8753-8" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_2ba441483bc54b06b3d566b8762f8753-8"&gt;&lt;/a&gt;&lt;span class="nb"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'y'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'FontSize'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_2ba441483bc54b06b3d566b8762f8753-9" name="rest_code_2ba441483bc54b06b3d566b8762f8753-9" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_2ba441483bc54b06b3d566b8762f8753-9"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'PaperSize'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_2ba441483bc54b06b3d566b8762f8753-10" name="rest_code_2ba441483bc54b06b3d566b8762f8753-10" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_2ba441483bc54b06b3d566b8762f8753-10"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'fig_ex_matlab'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'-dpng'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'-r150'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Following I summarize some sizes for articles, posters and slides.&lt;/p&gt;
&lt;section id="articles"&gt;
&lt;h3&gt;Articles&lt;/h3&gt;
&lt;p&gt;For an article is common to use letter size that is 8.5 in × 11 in
(215.9 mm × 279.4 mm). Another common size is A4 that is 210 mm × 297 mm
(8.27 in × 11.7 in).&lt;/p&gt;
&lt;p&gt;A guideline for common sizes is the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;1.0 columns width: 90 mm (3.5 in);&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.5 columns width: 140 mm (5.5 in);&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.0 columns width: 190 mm (6.5 in);&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and depicted in the following image.&lt;/p&gt;
&lt;img alt="Figure widths compared with letter size paper." class="align-center" src="https://nicoguaro.github.io/images/tech_writing/sizes.png" style="width: 400px;"&gt;
&lt;p&gt;If we consider a &lt;em&gt;resolution&lt;/em&gt; of 300 dpi, we have the following number
of pixels horizontally&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;1.0 columns width: 1050 pixels;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.5 columns width: 1650 pixels; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.0 columns width: 1950 pixels.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that an HD display has 1920 pixels in the horizontal direction. That means
that you need a HD display to be able to see that much pixels.&lt;/p&gt;
&lt;p&gt;Regarding text size, it is common to have sizes between 8 and 12 pts for figures.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="posters"&gt;
&lt;h3&gt;Posters&lt;/h3&gt;
&lt;p&gt;In the case of an A0 size paper (841 mm × 1189 mm, 33 in × 47 in) the sizes
would be around:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;1.0 columns width: 360 mm (14 in);&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.5 columns width: 560 mm (22 in); and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.0 columns width: 760 mm (26 in).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Keep in mind that a poster might not fit into the two-column format. Although,
I still find the reference for the size useful.&lt;/p&gt;
&lt;p&gt;Regarding the size of fonts in posters it is a good idea to keep it over
24 pts (see reference 3).&lt;/p&gt;
&lt;/section&gt;
&lt;section id="slides"&gt;
&lt;h3&gt;Slides&lt;/h3&gt;
&lt;p&gt;In the case of slides there are two common aspect ratios 16:9 and 4:3.
And, different software have different nominal sizes. The following
table present the nominal sizes for LibreOffice Impress and MS
Power Point.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;16:9&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;4:3&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;LibreOffice Impress&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;11.02 in × 6.20 in&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;11.02 in × 8.00 in&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;MS Power Point&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;13.32 in × 7.50 in&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;10.00 in × 7.50 in&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;section id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Matthew Butterick (2019). &lt;a class="reference external" href="https://practicaltypography.com/"&gt;Butterick's Practical Typography&lt;/a&gt;.
Second edition, Matthew Butterick.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rougier, Nicolas P., Michael Droettboom, and Philip E. Bourne (2014).
“Ten Simple Rules for Better Figures.” PLOS Computational Biology 10(9):e1003833.
DOI: 10.1371/journal.pcbi.1003833.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Erren, Thomas C., and Philip E. Bourne. 2007.
“Ten Simple Rules for a Good Poster Presentation.”
PLOS Computational Biology 3(5):e102. DOI: 10.1371/journal.pcbi.0030102&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Elsevier. (n.d.). "Artwork Overview." Retrieved November 1, 2021,
from &lt;a class="reference external" href="https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-overview"&gt;https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-overview&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Elsevier. (n.d.). "Artwork sizing." Retrieved November 1, 2021,
from &lt;a class="reference external" href="https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-sizing"&gt;https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-sizing&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Journal of applied physics (n.d.). "Preparing Your Manuscript: Authors
Instruction." Retrieved November 1, 2021, from &lt;a class="reference external" href="https://aip.scitation.org/jap/authors/manuscript"&gt;https://aip.scitation.org/jap/authors/manuscript&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>figures</category><category>inkscape</category><category>latex</category><category>libreoffice</category><category>research</category><category>typography</category><category>writing</category><guid>https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/</guid><pubDate>Wed, 03 Nov 2021 17:53:40 GMT</pubDate></item><item><title>How much chicharrón can Jeff Bezos buy?</title><link>https://nicoguaro.github.io/posts/chicharron/</link><dc:creator>Sebastián Tobón</dc:creator><description>&lt;p&gt;This is a calculation made by Sebastián Tobón when he was taking the course
Numerical Methods for Partial Differential Equations (in 2020). The purpose
was to encourage doing quick calculations (back-of-the-envelope) and having
the size of some numbers (for example, 10¹²) in their heads.
Here is the question I asked:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How much chicharrón (pork rinds) can Jeff Bezos buy?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Below is his answer.&lt;/p&gt;
&lt;section id="sebastian-s-answer"&gt;
&lt;h2&gt;Sebastián's answer&lt;/h2&gt;
&lt;p&gt;Suppose an average pig weighs 80 kg. If its muscle tissue constitutes
35% to 40% of its body weight, we can ge 30 kg of meat.&lt;/p&gt;
&lt;p&gt;Jeff Bezos has a net worth of&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
JB = 115.7 \times 10^9 \text{ USD}\, .
\end{equation*}
&lt;/div&gt;
&lt;p&gt;The price of 100 g of chicharrón is&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
7000\text{ COP}\, \frac{1\text{ USD}}{3539.13\text{ COP}} = 1.978\text{ USD}\, .
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Jeff Bezos can therefore buy&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\frac{115.7\times 10^9\text{ USD}}{\frac{1.978\text{ USD}}{100\text{ g}}}
= 5.85\times 10^{12}\text{ g of chicharrón.}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;The total number of pigs in the world is 1×10⁹. This is equivalent
to a total of&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
1\times 10^9 \text{ heads} \times \frac{30\text{ kg}}{1\text{ head}}
= 3\times 10^{13} \text{ g of chicharrón.}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;In order to buy all the pork rinds in the world, he must increase his net
worth by 5.13.&lt;/p&gt;
&lt;p&gt;The most expensive pigs in the world cost around 1000 USD, then&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\frac{1000\text{ USD}}{\text{head}}\times 10^9\text{ heads}
= 10^{12}\text{ USD}\, .
\end{equation*}
&lt;/div&gt;
&lt;p&gt;On the other hand, he can buy 5.85 times the amount of pigs globally —
the most expensive in the market. Therefore&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;it is more profitable for him to buy all the pigs in the world.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;</description><category>back-of-the-envelope calculations</category><category>invited posts</category><category>popular science</category><guid>https://nicoguaro.github.io/posts/chicharron/</guid><pubDate>Thu, 30 Sep 2021 15:42:44 GMT</pubDate></item><item><title>Using Wolfram Language in Jupyter: A free alternative to Mathematica</title><link>https://nicoguaro.github.io/posts/wolfram_jupyter/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;In this post I am going to describe how to add the Wolfram Language to
the Jupyter notebook. This provides a free alternative to Mathematica with,
pretty much, the same syntax. The use of the Wolfram Engine is free for
non-production as described in their website:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Free Wolfram Engine for Developers is available for non-production
software development.&lt;/p&gt;
&lt;p&gt;You can use this product to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;develop a product for yourself or your company&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;conduct personal projects at home, at school, at work&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;explore the Wolfram Language for future production projects&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install you should do the following steps:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.wolfram.com/engine"&gt;Download Wolfram Engine&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a Wolfram account, if you don't have one.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Execute the installer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Type the following in a terminal&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_9070eb91d8c9452fa0ebd39a9fb2808f-1"&gt;&lt;/a&gt;wolframscript
&lt;/pre&gt;&lt;p&gt;and you should be asked for your email and password.&lt;/p&gt;
&lt;p&gt;After that you should be in a terminal and see the following&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_68ed263579c148c09ba7ff3de45cfb84-1"&gt;&lt;/a&gt;Wolfram Engine activated. See https://www.wolfram.com/wolframscript/ for more information.
&lt;a name="rest_code_68ed263579c148c09ba7ff3de45cfb84-2"&gt;&lt;/a&gt;Wolfram Language 12.2.0 Engine for Linux x86 (64-bit)
&lt;a name="rest_code_68ed263579c148c09ba7ff3de45cfb84-3"&gt;&lt;/a&gt;Copyright 1988-2021 Wolfram Research, Inc.
&lt;/pre&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And we can try that it is working&lt;/p&gt;
&lt;pre class="code mathematica"&gt;&lt;a name="rest_code_25867bba4022446597c5c760938ae07a-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a name="rest_code_25867bba4022446597c5c760938ae07a-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_25867bba4022446597c5c760938ae07a-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;12.2.0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Linux&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x86&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;January&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a name="rest_code_25867bba4022446597c5c760938ae07a-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_25867bba4022446597c5c760938ae07a-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Integrate&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a name="rest_code_25867bba4022446597c5c760938ae07a-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_25867bba4022446597c5c760938ae07a-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ArcTan&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now we need to install
&lt;a class="reference external" href="https://github.com/WolframResearch/WolframLanguageForJupyter.git"&gt;WolframLanguageForJupyter&lt;/a&gt;.
For that we can type the following in a terminal&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_a79b4576a1094713bb699d65df6006b1-1"&gt;&lt;/a&gt;git clone https://github.com/WolframResearch/WolframLanguageForJupyter.git
&lt;a name="rest_code_a79b4576a1094713bb699d65df6006b1-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_a79b4576a1094713bb699d65df6006b1-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; WolframLanguageForJupyter/
&lt;a name="rest_code_a79b4576a1094713bb699d65df6006b1-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_a79b4576a1094713bb699d65df6006b1-5"&gt;&lt;/a&gt;./configure-jupyter.wls add
&lt;/pre&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To test that it is installed we can type the following in a terminal&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_79b58637716d4347b8c3fe31a77c46dd-1"&gt;&lt;/a&gt;jupyter kernelspec list
&lt;/pre&gt;&lt;p&gt;and it should have an output that includes a line similar to the following&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_dbd81b90ce7248ddad8af7a247dc433b-1"&gt;&lt;/a&gt;wolframlanguage12.   /home/nicoguaro/.local/share/jupyter/kernels/wolframlanguage12.2
&lt;/pre&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or we could also try with&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_cb712b2b985f484d822a44cbd8354f61-1"&gt;&lt;/a&gt;jupyter notebook
&lt;/pre&gt;&lt;p&gt;and see the following in the kernel menu.&lt;/p&gt;
&lt;img alt="Kernel menu after installing WolframLanguageForJupyter." class="align-center" src="https://nicoguaro.github.io/images/wolfram_menu.png" style="width: 400px;"&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="test-drive"&gt;
&lt;h2&gt;Test drive&lt;/h2&gt;
&lt;p&gt;I tested some of the capabilities and you can download the
&lt;a class="reference external" href="https://nicoguaro.github.io/downloads/notebooks/wolfram_notebook.ipynb"&gt;notebook&lt;/a&gt; or
see a static version
&lt;a class="reference external" href="http://nbviewer.jupyter.org/url/nicoguaro.github.io/downloads/notebooks/wolfram_notebook.ipynb"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's compute the integral&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\int \frac{1}{1 + x^3}\mathrm{d}x\, .
\end{equation*}
&lt;/div&gt;
&lt;pre class="code mathematica"&gt;&lt;a name="rest_code_23c03684efc84bf3a6c070111d1a52d3-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;sol&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Integrate&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a name="rest_code_23c03684efc84bf3a6c070111d1a52d3-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;TeXForm&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sol&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;div class="math"&gt;
\begin{equation*}
-\frac{1}{6} \log \left(x^2-x+1\right)+\frac{1}{3} \log (x+1)+\frac{\tan^{-1}\left(\frac{2 x-1}{\sqrt{3}}\right)}{\sqrt{3}}
\end{equation*}
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And make a 3D plot.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_f293df438d7a4ad2a9d4522a0722c737-1"&gt;&lt;/a&gt;fun:= Sin[Sqrt[x^2 + y^2]]/Sqrt[x^2 + y^2]
&lt;a name="rest_code_f293df438d7a4ad2a9d4522a0722c737-2"&gt;&lt;/a&gt;Plot3D[fun, {x, -5*Pi, 5*Pi}, {y, -5*Pi, 5*Pi},
&lt;a name="rest_code_f293df438d7a4ad2a9d4522a0722c737-3"&gt;&lt;/a&gt;    PlotPoints -&amp;gt; 100, BoxRatios -&amp;gt; {1, 1, 0.2},
&lt;a name="rest_code_f293df438d7a4ad2a9d4522a0722c737-4"&gt;&lt;/a&gt;    PlotRange -&amp;gt; All]
&lt;/pre&gt;&lt;img alt="3D plot in the notebook." class="align-center" src="https://nicoguaro.github.io/images/wolfram_plot.png" style="width: 600px;"&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In this case we don't have an interactive image. This is still not implemented,
but if you are interested there is an
&lt;a class="reference external" href="https://github.com/WolframResearch/WolframLanguageForJupyter/issues/76"&gt;open issue&lt;/a&gt;
about it in GitHub.&lt;/p&gt;
&lt;/div&gt;</description><category>computer algebra system</category><category>jupyter</category><category>mathematica</category><category>wolfram engine</category><guid>https://nicoguaro.github.io/posts/wolfram_jupyter/</guid><pubDate>Wed, 31 Mar 2021 00:50:09 GMT</pubDate></item><item><title>Coming back to the Boundary element method</title><link>https://nicoguaro.github.io/posts/bem_corrected/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;During October (2017) I wrote a program per day for some well-known numerical
methods in both Python and Julia. It was intended to be an exercise to learn
some Julia. You can see a &lt;a class="reference external" href="https://nicoguaro.github.io/posts/numerical_summary"&gt;summary here&lt;/a&gt;. I succeeded
in 30 of the challenges, except for the BEM
(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Boundary_element_method"&gt;Boundary Element Method&lt;/a&gt;),
where I could not figure out what was wrong that day. The original
post is &lt;a class="reference external" href="https://nicoguaro.github.io/posts/numerical-26"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thomas Klimpel found the mistake and wrote an email where he described my
mistakes. So, I am creating a new post with a correct implementation
of the BEM.&lt;/p&gt;
&lt;div class="section" id="the-boundary-element-method"&gt;
&lt;h2&gt;The Boundary Element Method&lt;/h2&gt;
&lt;p&gt;We want so solve the equation&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\nabla^2 u = -f(x, y)\quad \forall (x, y) \in \Omega\, ,
\end{equation*}
&lt;/div&gt;
&lt;p&gt;with&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
u(x) = g(x, y), \quad \forall (x, y)\in \partial \Omega \, .
\end{equation*}
&lt;/div&gt;
&lt;p&gt;For this method, we need to use an integral representation of the equation,
that, in this case, is&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
u(\boldsymbol{\xi})  = \int_{S} [u(\mathbf{x}) F(\mathbf{x}, \boldsymbol{\xi})
    - q(\mathbf{x})G(\mathbf{x}, \boldsymbol{\xi})]\mathrm{d}S(\mathbf{x})
    + \int_{V} f(\mathbf{x}) G(\mathbf{x}, \boldsymbol{\xi}) \mathrm{d}V(\mathbf{x})
\end{equation*}
&lt;/div&gt;
&lt;p&gt;with&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
G(\mathbf{x}, \boldsymbol{\xi})= -\frac{1}{2\pi}\ln|\mathbf{x} - \xi|
\end{equation*}
&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
F(\mathbf{x}, \boldsymbol{\xi}) =
  -\frac{1}{2\pi |\mathbf{x} - \boldsymbol{\xi}|^2}
  (\mathbf{x} - \boldsymbol{\xi})\cdot\hat{\mathbf{n}}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Then, we can form a system of equations&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
[G]\{q\} = [F]\{u\}\, ,
\end{equation*}
&lt;/div&gt;
&lt;p&gt;that we obtain by discretization of the boundary. If we take constant
variables over the discretization, the integral can be computed analytically
by&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
G_{nm} = -\frac{1}{2\pi}\left[r \sin\theta\left(\ln|r| - 1\right)
         + \theta r\cos\theta\right]^{\theta_B, r_B}_{\theta_A, r_A}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
F_{nm} = \left[\frac{\theta}{2\pi}\right]^{\theta_B}_{\theta_A}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;for points &lt;span class="math"&gt;\(n\)&lt;/span&gt; and &lt;span class="math"&gt;\(m\)&lt;/span&gt; in different elements, and the subindices
&lt;span class="math"&gt;\(A,B\)&lt;/span&gt; refer to the endpoints of the evaluation element. We should be
careful evaluating this expression since both &lt;span class="math"&gt;\(r_A\)&lt;/span&gt; and &lt;span class="math"&gt;\(r_B\)&lt;/span&gt; can
be (close to) zero and make it &lt;em&gt;explode&lt;/em&gt;. Also, here it was the main problem
since I forgot to compute the angles with respect to elements that are,
in general, not aligned with horizontal or vertical axes.&lt;/p&gt;
&lt;p&gt;For diagonal terms the integrals evaluate to&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
G_{nn} = -\frac{L}{2\pi}\left(\ln\left\vert\frac{L}{2}\right\vert - 1\right)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
F_{nn} = - \frac{1}{2}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;with &lt;span class="math"&gt;\(L\)&lt;/span&gt; the size of the element.&lt;/p&gt;
&lt;p&gt;Following is the code. Keep in mind that this code works for purely Dirichlet
problems. For mixed Dirichlet-Neumann the influence matrices would need
rearranging to separate known and unknowns in opposite sides of the equation.&lt;/p&gt;
&lt;p&gt;You can download the files for this &lt;a class="reference external" href="https://nicoguaro.github.io/downloads/bem.zip"&gt;project here&lt;/a&gt;.
It includes a YML file to create a conda environment with the dependencies
listed. For example, it uses version 3.0 of
&lt;a class="reference external" href="https://github.com/nschloe/meshio"&gt;Meshio&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arctan2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arctan&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;numpy.linalg&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;norm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;solve&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Axes3D&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-6"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;meshio&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-9"&gt;&lt;/a&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;assem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;elems&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-10"&gt;&lt;/a&gt;      &lt;span class="sd"&gt;"""Assembly matrices for the BEM problem&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-12"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      Parameters&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-13"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      ----------&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-14"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      coords : ndarray, float&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-15"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Coordinates for the nodes.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-16"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      elems : ndarray, int&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-17"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Connectivity for the elements.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-18"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-19"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      Returns&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-20"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      -------&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-21"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      Gmat : ndarray, float&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-22"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Influence matrix for the flow.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-23"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      Fmat : ndarray, float&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-24"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Influence matrix for primary variable.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-25"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      """&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-26"&gt;&lt;/a&gt;      &lt;span class="n"&gt;nelems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;elems&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-27"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Gmat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;nelems&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nelems&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-28"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Fmat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;nelems&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nelems&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-29"&gt;&lt;/a&gt;      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ev_cont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;elem1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elems&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-30"&gt;&lt;/a&gt;          &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;col_cont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;elem2&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elems&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-31"&gt;&lt;/a&gt;              &lt;span class="n"&gt;pt_col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elem2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-32"&gt;&lt;/a&gt;              &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ev_cont&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;col_cont&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-33"&gt;&lt;/a&gt;                  &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;norm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elem1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elem1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-34"&gt;&lt;/a&gt;                  &lt;span class="n"&gt;Gmat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ev_cont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ev_cont&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-35"&gt;&lt;/a&gt;                  &lt;span class="n"&gt;Fmat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ev_cont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ev_cont&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-36"&gt;&lt;/a&gt;              &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-37"&gt;&lt;/a&gt;                  &lt;span class="n"&gt;Gij&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Fij&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;influence_coeff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elem1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pt_col&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-38"&gt;&lt;/a&gt;                  &lt;span class="n"&gt;Gmat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ev_cont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col_cont&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gij&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-39"&gt;&lt;/a&gt;                  &lt;span class="n"&gt;Fmat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ev_cont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col_cont&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Fij&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-40"&gt;&lt;/a&gt;      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Gmat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Fmat&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-41"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-42"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-43"&gt;&lt;/a&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;influence_coeff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pt_col&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-44"&gt;&lt;/a&gt;      &lt;span class="sd"&gt;"""Compute influence coefficients&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-45"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-46"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      Parameters&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-47"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      ----------&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-48"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      elems : ndarray, int&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-49"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Connectivity for the elements.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-50"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      coords : ndarray, float&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-51"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Coordinates for the nodes.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-52"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      pt_col : ndarray&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-53"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Coordinates of the colocation point.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-54"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-55"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      Returns&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-56"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      -------&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-57"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      G_coeff : float&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-58"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Influence coefficient for flows.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-59"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      F_coeff : float&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-60"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Influence coefficient for primary variable.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-61"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      """&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-62"&gt;&lt;/a&gt;      &lt;span class="n"&gt;dcos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-63"&gt;&lt;/a&gt;      &lt;span class="n"&gt;dcos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dcos&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;norm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dcos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-64"&gt;&lt;/a&gt;      &lt;span class="n"&gt;rotmat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="n"&gt;dcos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dcos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-65"&gt;&lt;/a&gt;                      &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dcos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dcos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]])&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-66"&gt;&lt;/a&gt;      &lt;span class="n"&gt;r_A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rotmat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pt_col&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-67"&gt;&lt;/a&gt;      &lt;span class="n"&gt;r_B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rotmat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pt_col&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-68"&gt;&lt;/a&gt;      &lt;span class="n"&gt;theta_A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arctan2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;r_A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-69"&gt;&lt;/a&gt;      &lt;span class="n"&gt;theta_B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arctan2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_B&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;r_B&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-70"&gt;&lt;/a&gt;      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;norm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mf"&gt;1e-6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-71"&gt;&lt;/a&gt;          &lt;span class="n"&gt;G_coeff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r_B&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;norm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_B&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;theta_B&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;r_B&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-72"&gt;&lt;/a&gt;      &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;norm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mf"&gt;1e-6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-73"&gt;&lt;/a&gt;          &lt;span class="n"&gt;G_coeff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;norm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_A&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;theta_A&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;r_A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-74"&gt;&lt;/a&gt;      &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-75"&gt;&lt;/a&gt;          &lt;span class="n"&gt;G_coeff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r_B&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;norm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_B&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;theta_B&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;r_B&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;\
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-76"&gt;&lt;/a&gt;                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;norm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_A&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;theta_A&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;r_A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-77"&gt;&lt;/a&gt;      &lt;span class="n"&gt;F_coeff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;theta_B&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;theta_A&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-78"&gt;&lt;/a&gt;      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;G_coeff&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;F_coeff&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-79"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-80"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-81"&gt;&lt;/a&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;eval_sol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ev_coords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;elems&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u_boundary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q_boundary&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-82"&gt;&lt;/a&gt;      &lt;span class="sd"&gt;"""Evaluate the solution in a set of points&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-83"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-84"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      Parameters&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-85"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      ----------&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-86"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      ev_coords : ndarray, float&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-87"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Coordinates of the evaluation points.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-88"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      coords : ndarray, float&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-89"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Coordinates for the nodes.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-90"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      elems : ndarray, int&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-91"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Connectivity for the elements.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-92"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      u_boundary : ndarray, float&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-93"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Primary variable in the nodes.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-94"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      q_boundary : [type]&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-95"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Flows in the nodes.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-96"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-97"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      Returns&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-98"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      -------&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-99"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      solution : ndarray, float&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-100"&gt;&lt;/a&gt;&lt;span class="sd"&gt;          Solution evaluated in the given points.&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-101"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      """&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-102"&gt;&lt;/a&gt;      &lt;span class="n"&gt;npts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ev_coords&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-103"&gt;&lt;/a&gt;      &lt;span class="n"&gt;solution&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;npts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-104"&gt;&lt;/a&gt;      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;npts&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-105"&gt;&lt;/a&gt;          &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ev_cont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;elem&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elems&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-106"&gt;&lt;/a&gt;              &lt;span class="n"&gt;pt_col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ev_coords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-107"&gt;&lt;/a&gt;              &lt;span class="n"&gt;G&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;influence_coeff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pt_col&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-108"&gt;&lt;/a&gt;              &lt;span class="n"&gt;solution&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;u_boundary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ev_cont&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;q_boundary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ev_cont&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-109"&gt;&lt;/a&gt;      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;solution&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-110"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-111"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-112"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#%% Simulation&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-113"&gt;&lt;/a&gt;&lt;span class="n"&gt;mesh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;meshio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"disk.msh"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-114"&gt;&lt;/a&gt;&lt;span class="n"&gt;elems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"line"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-115"&gt;&lt;/a&gt;&lt;span class="n"&gt;bound_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elems&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-116"&gt;&lt;/a&gt;&lt;span class="n"&gt;coords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bound_nodes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-117"&gt;&lt;/a&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-118"&gt;&lt;/a&gt;&lt;span class="n"&gt;x_m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elems&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elems&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-119"&gt;&lt;/a&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arctan2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x_m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-120"&gt;&lt;/a&gt;&lt;span class="n"&gt;u_boundary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-121"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-122"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-123"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#%% Assembly&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-124"&gt;&lt;/a&gt;&lt;span class="n"&gt;Gmat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Fmat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;assem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;elems&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-125"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-126"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#%% Solution&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-127"&gt;&lt;/a&gt;&lt;span class="n"&gt;q_boundary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;solve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Gmat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Fmat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u_boundary&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-128"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-129"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#%% Evaluation&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-130"&gt;&lt;/a&gt;&lt;span class="n"&gt;ev_coords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-131"&gt;&lt;/a&gt;&lt;span class="n"&gt;ev_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ev_y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ev_coords&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-132"&gt;&lt;/a&gt;&lt;span class="n"&gt;solution&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;eval_sol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ev_coords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;elems&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u_boundary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q_boundary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-133"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-134"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#%% Visualization&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-135"&gt;&lt;/a&gt;&lt;span class="n"&gt;tris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"triangle"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-136"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-137"&gt;&lt;/a&gt;&lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;projection&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'3d'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-138"&gt;&lt;/a&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot_trisurf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ev_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ev_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;solution&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"RdYlBu"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-139"&gt;&lt;/a&gt;                &lt;span class="n"&gt;edgecolor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"#3c3c3c"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-140"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-141"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yticks&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-142"&gt;&lt;/a&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zticks&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-143"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savefig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bem_solution.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bbox_inches&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"tight"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transparent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_0c78e1dddcf44edb9cd3a147623164d5-144"&gt;&lt;/a&gt;            &lt;span class="n"&gt;dpi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The result in this case is the following.&lt;/p&gt;
&lt;img alt="Solution of the differential equation using the BEM." class="align-center" src="https://nicoguaro.github.io/images/bem_solution.png" style="width: 600px;"&gt;
&lt;/div&gt;</description><category>boundary element method</category><category>numerical methods</category><category>python</category><category>scientific computing</category><guid>https://nicoguaro.github.io/posts/bem_corrected/</guid><pubDate>Mon, 22 Feb 2021 15:00:00 GMT</pubDate></item><item><title>Downloading videos from MS Stream</title><link>https://nicoguaro.github.io/posts/download_stream/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;This week a student asked me about downloading the videos from one of the
courses from MS Stream. The problem is that if you are not a proprietary
of the video you cannot download it. So, I will show you an option to
download videos without being a proprietary of them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; It might be a good idea if you ask your organization about
the copyright of the videos.&lt;/p&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;You will need the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://git-scm.com/downloads"&gt;git&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.ffmpeg.org/download.html"&gt;ffmpeg&lt;/a&gt;; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="destreamer-installation"&gt;
&lt;h2&gt;&lt;code class="docutils literal"&gt;destreamer&lt;/code&gt; installation&lt;/h2&gt;
&lt;p&gt;After getting the prerequisites you can download
&lt;a class="reference external" href="https://github.com/snobu/destreamer"&gt;destreamer&lt;/a&gt; using&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_f6efd91099a54b23989094672ac22768-1"&gt;&lt;/a&gt;$ git clone https://github.com/snobu/destreamer
&lt;a name="rest_code_f6efd91099a54b23989094672ac22768-2"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; destreamer
&lt;a name="rest_code_f6efd91099a54b23989094672ac22768-3"&gt;&lt;/a&gt;$ npm install
&lt;a name="rest_code_f6efd91099a54b23989094672ac22768-4"&gt;&lt;/a&gt;$ npm run build
&lt;/pre&gt;&lt;p&gt;in a terminal.&lt;/p&gt;
&lt;p&gt;If you do not want to play with
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Environment_variable"&gt;environment variables&lt;/a&gt;,
I suggest that you just add &lt;code class="docutils literal"&gt;ffmpeg&lt;/code&gt; to the same folder as &lt;code class="docutils literal"&gt;destreamer&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="downloading"&gt;
&lt;h2&gt;Downloading&lt;/h2&gt;
&lt;p&gt;After that, you need to navigate to the folder where you downloaded
&lt;code class="docutils literal"&gt;destreamer&lt;/code&gt; and&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_bd4bfcfde9674938a67b707a3bf314a1-1"&gt;&lt;/a&gt;$ ./destreamer.sh -i &lt;span class="s2"&gt;"https://web.microsoftstream.com/video/VIDEO_ID"&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;in Mac or Linux,&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_6ab9d7bf29134200b77b86aadb814e95-1"&gt;&lt;/a&gt;$ destreamer.cmd -i &lt;span class="s2"&gt;"https://web.microsoftstream.com/video/VIDEO_ID"&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;in the command prompt in Windows, and&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_8b89029095694f9a9b9ead4ff9c76958-1"&gt;&lt;/a&gt;$ destreamer.ps1 -i &lt;span class="s2"&gt;"https://web.microsoftstream.com/video/VIDEO_ID"&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;in PowerShell.``VIDEO_ID`` refers to the identifier in MS Stream.&lt;/p&gt;
&lt;p&gt;If you want to download several files (like a complete course), you
can create a file with the URLs and use&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_954588134e8a42b8a62cdf2574a1d6ed-1"&gt;&lt;/a&gt;$ destreamer.cmd -f filename.txt
&lt;/pre&gt;&lt;/div&gt;</description><category>nodejs</category><category>tutorial</category><category>videos</category><guid>https://nicoguaro.github.io/posts/download_stream/</guid><pubDate>Fri, 12 Jun 2020 20:31:22 GMT</pubDate></item><item><title>Randomized Marking of a Tetrahedron</title><link>https://nicoguaro.github.io/posts/marking-tetrahedron/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;Yesterday (June 4, 2020), Christian Howard posted on
&lt;a class="reference external" href="https://twitter.com/choward1491/status/1268736220055699457"&gt;Twitter&lt;/a&gt;
the following question&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You are given a tetrahedron τ. For each triangular facet of τ,
we uniformly at random mark one of their edges. What is the
probability that there exists an edge of τ that is marked twice?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I thought about a little bit but I couldn't find how to count
properly. Then, a number popped up in my mind out of the blue:
&lt;span class="math"&gt;\(2/3\)&lt;/span&gt;, but I don't know why. So, I decided to run a
simulation to check this number.&lt;/p&gt;
&lt;p&gt;The right answer is &lt;span class="math"&gt;\(51/81\)&lt;/span&gt; that is approximately 63%. This
calculation is well explained in
&lt;a class="reference external" href="https://medium.com/@choward1491/randomized-marking-of-a-tetrahedron-f978593f43d2"&gt;Christian's blog&lt;/a&gt;
and with some cool drawings (and memes).&lt;/p&gt;
&lt;div class="section" id="the-algorithm"&gt;
&lt;h2&gt;The algorithm&lt;/h2&gt;
&lt;p&gt;The algorithm is quite simple. I number the edges in each face following
a counter-clockwise orientation:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;face 0&lt;/strong&gt;: edge 0, edge 1, edge 2&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;face 1&lt;/strong&gt;: edge 0, edge 3, edge 4&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;face 2&lt;/strong&gt;: edge 1, edge 5, edge 3&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;face 3&lt;/strong&gt;: edge 2, edge 4, edge 5&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then, I take each face and pick a random number from &lt;span class="math"&gt;\((0, 1, 2)\)&lt;/span&gt; and
mark the corresponding edge, and move to the following face. I repeat
this process several times and I count the favorable cases and divide
them by the number of trials to get an estimate of the probability.&lt;/p&gt;
&lt;p&gt;Following is a Python code that follows this idea.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;faces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-5"&gt;&lt;/a&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-6"&gt;&lt;/a&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-7"&gt;&lt;/a&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-8"&gt;&lt;/a&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mark_edges&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;marked_edges&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-13"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;face&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;faces&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;edge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;face&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;marked_edges&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;edge&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;marked_edges&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-18"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-20"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;comp_probs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N_min&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N_max&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ntrials&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;prob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;N_vals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N_min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N_max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ntrials&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-23"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;N_vals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-24"&gt;&lt;/a&gt;        &lt;span class="n"&gt;cont_marked&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-25"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cont&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-26"&gt;&lt;/a&gt;            &lt;span class="n"&gt;marked&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mark_edges&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-27"&gt;&lt;/a&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;marked&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-28"&gt;&lt;/a&gt;                &lt;span class="n"&gt;cont_marked&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-29"&gt;&lt;/a&gt;        &lt;span class="n"&gt;prob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cont_marked&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-30"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;N_vals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prob&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-31"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-32"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-33"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#%% Computation&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-34"&gt;&lt;/a&gt;&lt;span class="n"&gt;N_min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-35"&gt;&lt;/a&gt;&lt;span class="n"&gt;N_max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-36"&gt;&lt;/a&gt;&lt;span class="n"&gt;ntrials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-37"&gt;&lt;/a&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-38"&gt;&lt;/a&gt;&lt;span class="n"&gt;N_vals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;comp_probs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N_min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N_max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ntrials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-39"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-40"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#%% Plotting&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-41"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-42"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hlines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.63&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;N_min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;N_max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"#3f3f3f"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-43"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;semilogx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N_vals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prob&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;"o"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-44"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Number of trials"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-45"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Estimated probability"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-46"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savefig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"prob_tet.svg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dpi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bbox_inches&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"tight"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c0bd8a71a9444bceaacedeb5b5b045c2-47"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;And we can see the following evolution for different number of trials.&lt;/p&gt;
&lt;img alt="Estimated probabilities for different sample sizes." class="align-center" src="https://nicoguaro.github.io/images/marked_tets.svg" style="width: 600px;"&gt;
&lt;/div&gt;</description><category>combinatorics</category><category>computational geometry</category><category>monte carlo</category><guid>https://nicoguaro.github.io/posts/marking-tetrahedron/</guid><pubDate>Sat, 06 Jun 2020 03:58:32 GMT</pubDate></item><item><title>Technical writing</title><link>https://nicoguaro.github.io/posts/tech_writing/tech_writing/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;This is the first post about technical writing &lt;a class="footnote-reference brackets" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing/#footnote-1" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;*&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; from a series that
I will be creating during the course of this year. Technical writing is
something that most of us have to deal with in different contexts. For
example, in college coursework, research publications, software documentation.
The main idea of the series is to mention some of the tricks that I have
learned over the years and some tools that might come in handy.&lt;/p&gt;
&lt;p&gt;Future posts will (probably) be about:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math"&gt;Using equations&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs"&gt;Using figures&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using tables; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Managing bibliographic references.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="the-current-post"&gt;
&lt;h2&gt;The current post&lt;/h2&gt;
&lt;p&gt;As mentioned above, technical writing is something that a lot of persons
have to deal with. This is a skill that is sometimes overlooked,
but it should not. According to the
&lt;a class="reference external" href="https://www.bls.gov/ooh/media-and-communication/technical-writers.htm"&gt;U.S. Bureau of Labor Statistics&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Technical writers prepare instruction manuals, how-to guides,
journal articles, and other supporting documents to communicate complex and
technical information more easily.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And it is a desired skill in the workplace. Its demand is expected to grow
around 10% in the current decade.&lt;/p&gt;
&lt;section id="typography"&gt;
&lt;h3&gt;Typography&lt;/h3&gt;
&lt;p&gt;The first thing that I should mention is that writing documents is
typography. "Putting documents" together is typography because
we are &lt;em&gt;designing with text&lt;/em&gt; (Butterick, 2019). So, we should consider
ourselves typographers since we are constantly designing documents.&lt;/p&gt;
&lt;p&gt;I would suggest taking a look at "Butterick's Practical Typography"
since it is a really good book about it and it reads smoothly. I will
mention some important points here according to Butterick's
"Typography in ten minutes":&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;The most important typographic selection is on the body text.
This is due to the fact that it is most of the document.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose a point size between 10-12 points for printed documents
and 15-25 pixels for digital documents.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Line spacing should be between 120-145 % of the point size.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Line length should be between 45-90 characters. This is roughly
2 or 3 small caps alphabets:&lt;/p&gt;
&lt;p&gt;abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mind the selection of your font. Try to avoid default fonts such as
Arial, Calibri or Times New Roman.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="editors"&gt;
&lt;h3&gt;Editors&lt;/h3&gt;
&lt;p&gt;Another point that I want to touch in this post is about editors. The first
question that arises is "what editor should I use?". The short answer is:
&lt;strong&gt;use whatever your peers are using&lt;/strong&gt;. That's my best advice; that way you
have people to discuss with you about your doubts.&lt;/p&gt;
&lt;p&gt;The long answer … is that each editor has its weak and strong points. I
have written scientific papers in LaTeX, LibreOffice Writer and MS Word;
all of them look professional. So, in the end, you can write your
documents in several ways and achieve a similar result. I prefer to use
LaTeX for long documents since it is centered in the structure of the
document instead of the appearance and this is the way one should manage
a long document like a dissertation, in my opinion.&lt;/p&gt;
&lt;p&gt;If you just want me to pick one editor and suggest it to you, I would
say that you should ride with &lt;a class="reference external" href="https://www.libreoffice.org/"&gt;LibreOffice&lt;/a&gt;.
A good reference for it is "Designing with LibreOffice". Once you learn
how to use styles you will ask how have you been writing documents all
this time.&lt;/p&gt;
&lt;p&gt;There are two main flavors for editors that I am going to discuss:
WYSIWYG (What You See Is What You Get) and markup-based editors.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;WYSIWYG. This category is the one that most people is familiar with.
Two examples are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;LibreOffice writer; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microsoft Word.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Markup-based editors rely on marks on the "text" to differentiate
sections and styles. In this case, your text looks like code, as seen
in the following image&lt;/p&gt;
&lt;img alt="/images/rst_code.png" src="https://nicoguaro.github.io/images/rst_code.png"&gt;
&lt;p&gt;Some examples are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;LaTeX;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.markdownguide.org/getting-started"&gt;Markdown&lt;/a&gt;; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docutils.sourceforge.io/rst.html"&gt;reStructuredtext&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Independently of what your main editor is I suggest that you use
&lt;a class="reference external" href="https://pandoc.org/"&gt;Pandoc&lt;/a&gt;. It allows you to convert between several
formats, making the process a little bit easier. There is even an editor
based completely on it named &lt;a class="reference external" href="https://panwriter.com/"&gt;Panwriter&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Matthew Butterick (2019). &lt;a class="reference external" href="https://practicaltypography.com/"&gt;Butterick's Practical Typography&lt;/a&gt;.
Second edition, Matthew Butterick.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wikibooks contributors. (2020). &lt;a class="reference external" href="https://en.wikibooks.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt;.
Wikibooks, The Free Textbook Project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bruce Byfield (2016). &lt;a class="reference external" href="https://designingwithlibreoffice.com/"&gt;Designing with LibreOffice&lt;/a&gt;.
Friends of OpenDocument, Inc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deville, S. (2015).
&lt;a class="reference external" href="https://sylvaindeville.net/2015/07/17/writing-academic-papers-in-plain-text-with-markdown-and-jupyter-notebook/"&gt;Writing academic papers in plain text with Markdown and Jupyter notebook&lt;/a&gt;.
Sylvain Deville.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Eric Holscher (2016).
&lt;a class="reference external" href="https://www.ericholscher.com/blog/2016/jul/1/sphinx-and-rtd-for-writers/"&gt;An introduction to Sphinx and Read the Docs for Technical Writers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class="footnote brackets" id="footnote-1" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing/#footnote-reference-1"&gt;*&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;This post is (somewhat) related to a
&lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing/herramientas-investigacion/"&gt;previous post&lt;/a&gt;
where I discussed research tools that most of us need but are not
commonly taught in a formal fashion.&lt;/p&gt;
&lt;/aside&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>latex</category><category>libreoffice</category><category>research</category><category>typography</category><category>writing</category><guid>https://nicoguaro.github.io/posts/tech_writing/tech_writing/</guid><pubDate>Thu, 28 May 2020 20:53:40 GMT</pubDate></item><item><title>Technical writing: using math</title><link>https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;In a &lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing"&gt;previous post&lt;/a&gt; I mentioned some general aspects of
technical writing. In this one, I would like to talk about including
mathematical expressions in technical documents.&lt;/p&gt;
&lt;p&gt;There are two main ways to include math in your documents:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;using text; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;using a graphic interface.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using a graphic interface, such as the equation editor in
LibreOffice Writer or MS Word, or
&lt;a class="reference external" href="http://www.dessci.com/en/products/mathtype/"&gt;MathType&lt;/a&gt; is convenient.
You don't need to memorize anything and you can look at your expressions
while creating them. Nevertheless, it can be slow compared to using text
input — once you are comfortable with the syntax.&lt;/p&gt;
&lt;p&gt;There are two main flavors of equations used over the internet:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/MathML"&gt;MathML&lt;/a&gt; is a
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/World_Wide_Web_Consortium"&gt;W3C standard&lt;/a&gt;
for equations and it is included in HTML5, so it would work in all
modern browsers. The problem with it is that it is not designed to be
written by hand. So one can use it if have some automatic way of generating
the code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.overleaf.com/learn/latex/Mathematical_expressions"&gt;LaTeX&lt;/a&gt;
is my suggested way to write equations. The learning curve might be a
little bit steep at the beginning but it pays off.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One tool that helps with equations is &lt;a class="reference external" href="https://mathpix.com/"&gt;MathPix Snip&lt;/a&gt;
that automatically generates LaTeX or MathML code from an image, even a
handwritten one. Another tool that is really useful is
&lt;a class="reference external" href="http://detexify.kirelabs.org/classify.html"&gt;Detexify&lt;/a&gt; that let you
draw a symbol and gives you the LaTeX syntax for it.&lt;/p&gt;
&lt;p&gt;In the remaining of the posts I will show my suggestions for working
with equations in LibreOffice and MS Word. If you are using LaTeX or
MarkDown/ReStructuredText for your documents you are already using
LaTeX for your equations.&lt;/p&gt;
&lt;section id="libreoffice"&gt;
&lt;h2&gt;LibreOffice&lt;/h2&gt;
&lt;p&gt;LibreOffice has its own math editor with its own syntax and it works
fine for small expressions, but it gets complicated for large equations or
long algebraic manipulations. For LibreOffice I would suggest to use
&lt;a class="reference external" href="http://roland65.free.fr/texmaths/install.html"&gt;TexMaths&lt;/a&gt;, it is simple to
use and works for the word processor (Writer) and presentations (Impress).
I suppose it also works for spreadsheets (Calc), but I don't remember
using equations in one.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="ms-office"&gt;
&lt;h2&gt;MS Office&lt;/h2&gt;
&lt;p&gt;MS Office has its own math editor as well, it works fine and is easy to use.
Nevertheless, the same problem appears when you want long expressions.
One option is to directly use
&lt;a class="reference external" href="https://docs.microsoft.com/en-us/archive/blogs/murrays/latex-math-in-office"&gt;LaTeX in Office&lt;/a&gt;
but I prefer to use &lt;a class="reference external" href="http://www.jonathanleroux.org/software/iguanatex/download.html"&gt;IguanaTex&lt;/a&gt;.
It is a complement that allows to input equations similarly to TexMaths in
LibreOffice.&lt;/p&gt;
&lt;p&gt;You could also directly paste MathML equations into MS Word (&amp;gt;2013 and Windows).&lt;/p&gt;
&lt;/section&gt;
&lt;section id="use-a-sympy"&gt;
&lt;h2&gt;Use a SymPy&lt;/h2&gt;
&lt;p&gt;Indepent of the tool that you use to write your documents I strongly suggest
to use a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Computer_algebra_system"&gt;CAS&lt;/a&gt;
(Computer Algebra System), such as Mathematica or SymPy. These programs
have automatic generation of LaTeX and MathML from expression and that can
ease the process a lot.&lt;/p&gt;
&lt;p&gt;Let's check an example. Suppose that we have the function&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
f(x) = \exp(-x^2) \sin(3*x)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;and we want to compute its second derivative&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
f''(x) = \left(- 12 x \cos{\left(3 x \right)} + 2 \left(2 x^{2} - 1\right) \sin{\left(3 x \right)} - 9 \sin{\left(3 x \right)}\right) e^{- x^{2}}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;The following code gives us the LaTex code&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_53e0280489604d7fb43a45aaaef850af-1" name="rest_code_53e0280489604d7fb43a45aaaef850af-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_53e0280489604d7fb43a45aaaef850af-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sympy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_53e0280489604d7fb43a45aaaef850af-2" name="rest_code_53e0280489604d7fb43a45aaaef850af-2" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_53e0280489604d7fb43a45aaaef850af-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;init_session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_53e0280489604d7fb43a45aaaef850af-3" name="rest_code_53e0280489604d7fb43a45aaaef850af-3" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_53e0280489604d7fb43a45aaaef850af-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_53e0280489604d7fb43a45aaaef850af-4" name="rest_code_53e0280489604d7fb43a45aaaef850af-4" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_53e0280489604d7fb43a45aaaef850af-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;fxx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_53e0280489604d7fb43a45aaaef850af-5" name="rest_code_53e0280489604d7fb43a45aaaef850af-5" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_53e0280489604d7fb43a45aaaef850af-5"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fxx&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that is&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code latex"&gt;&lt;a id="rest_code_2189df0bc818437eb9091481ed43be6f-1" name="rest_code_2189df0bc818437eb9091481ed43be6f-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_2189df0bc818437eb9091481ed43be6f-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(- 12 x &lt;span class="k"&gt;\cos&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt; + 2 &lt;span class="k"&gt;\left&lt;/span&gt;(2 x&lt;span class="nb"&gt;^{&lt;/span&gt;2&lt;span class="nb"&gt;}&lt;/span&gt; - 1&lt;span class="k"&gt;\right&lt;/span&gt;) &lt;span class="k"&gt;\sin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt; - 9 &lt;span class="k"&gt;\sin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt;&lt;span class="k"&gt;\right&lt;/span&gt;) e&lt;span class="nb"&gt;^{&lt;/span&gt;- x&lt;span class="nb"&gt;^{&lt;/span&gt;2&lt;span class="nb"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That corresponds to the code that I used above to render the equation&lt;/p&gt;
&lt;p&gt;If, we wanted the MathML code of that expression we could use
the following snippet&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_8ab8b051428c41b29ea3166cee065734-1" name="rest_code_8ab8b051428c41b29ea3166cee065734-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_8ab8b051428c41b29ea3166cee065734-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sympy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_8ab8b051428c41b29ea3166cee065734-2" name="rest_code_8ab8b051428c41b29ea3166cee065734-2" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_8ab8b051428c41b29ea3166cee065734-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;init_session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_8ab8b051428c41b29ea3166cee065734-3" name="rest_code_8ab8b051428c41b29ea3166cee065734-3" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_8ab8b051428c41b29ea3166cee065734-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_8ab8b051428c41b29ea3166cee065734-4" name="rest_code_8ab8b051428c41b29ea3166cee065734-4" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_8ab8b051428c41b29ea3166cee065734-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;fxx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_8ab8b051428c41b29ea3166cee065734-5" name="rest_code_8ab8b051428c41b29ea3166cee065734-5" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_8ab8b051428c41b29ea3166cee065734-5"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mathml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fxx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;printer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"presentation"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;notice the extra argument &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;printer="presentation"&lt;/span&gt;&lt;/code&gt;. If we want to add
this to MS Word, for example, we could add the output (that I will not
show because is really long) inside the following&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code xml"&gt;&lt;a id="rest_code_82dddb956cbf40bfbc4bdfb403631193-1" name="rest_code_82dddb956cbf40bfbc4bdfb403631193-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_82dddb956cbf40bfbc4bdfb403631193-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;math&lt;/span&gt; &lt;span class="na"&gt;xmlns =&lt;/span&gt; &lt;span class="s"&gt;"http://www.w3.org/1998/Math/MathML"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_82dddb956cbf40bfbc4bdfb403631193-2" name="rest_code_82dddb956cbf40bfbc4bdfb403631193-2" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_82dddb956cbf40bfbc4bdfb403631193-2"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;/math&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When using Jupyter Notebook this can be done graphically with a
right click over the expression. Then, the following menu is
shown&lt;/p&gt;
&lt;img alt="/images/jupyter_export_eqs.png" src="https://nicoguaro.github.io/images/jupyter_export_eqs.png"&gt;
&lt;/section&gt;
&lt;section id="references"&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;“How to Insert Equations in Microsoft Word.” WikiHow,
&lt;a class="reference external" href="https://www.wikihow.com/Insert-Equations-in-Microsoft-Word"&gt;https://www.wikihow.com/Insert-Equations-in-Microsoft-Word&lt;/a&gt;.
Accessed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“Copy MathML into Word to Use as Equation.” Stack Overflow,
&lt;a class="reference external" href="https://stackoverflow.com/questions/25430775/copy-mathml-into-word-to-use-as-equation"&gt;https://stackoverflow.com/questions/25430775/copy-mathml-into-word-to-use-as-equation&lt;/a&gt;.
Accessed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“Python - Output Sympy Equation to Word Using Mathml.” Stack Overflow,
&lt;a class="reference external" href="https://stackoverflow.com/questions/40921128/output-sympy-equation-to-word-using-mathml"&gt;https://stackoverflow.com/questions/40921128/output-sympy-equation-to-word-using-mathml&lt;/a&gt;.
Accessed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OERPUB (2016), “Mathconverter”, &lt;a class="reference external" href="https://github.com/oerpub/mathconverter"&gt;https://github.com/oerpub/mathconverter&lt;/a&gt;,
Accesed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description><category>latex</category><category>libreoffice</category><category>math</category><category>ms-word</category><category>research</category><category>typography</category><category>writing</category><guid>https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/</guid><pubDate>Thu, 28 May 2020 20:53:40 GMT</pubDate></item><item><title>Spell Check in Jupyter Notebook</title><link>https://nicoguaro.github.io/posts/ortografia_jupyter/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;The purpose of this post is to show how to have automatic spell check in
Jupyter Notebook, as shown below.&lt;/p&gt;
&lt;img alt="Example of spell checking in Jupyter Notebook." class="align-center" src="https://nicoguaro.github.io/images/ortografia_jupyter/ejemplo_ortografia.png" style="width: 600px;"&gt;
&lt;p&gt;There are &lt;a class="reference external" href="https://stackoverflow.com/q/39324039/3358223"&gt;several ways&lt;/a&gt;
to do this. However, the easiest way is through the (&lt;em&gt;nbextension&lt;/em&gt;)
&lt;a class="reference external" href="https://nicoguaro.github.io/posts/ortografia_jupyter/&amp;lt;https:/jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/spellchecker/README.html"&gt;Spellchecker&lt;/a&gt;. plugin.&lt;/p&gt;
&lt;section id="step-by-step"&gt;
&lt;h2&gt;Step by step&lt;/h2&gt;
&lt;p&gt;The steps to follow are those:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Install Jupyter notebook extensions (&lt;a class="reference external" href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions"&gt;nbextensions&lt;/a&gt;). This includes
&lt;a class="reference external" href="https://nicoguaro.github.io/posts/ortografia_jupyter/&amp;lt;https:/jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/spellchecker/README.html"&gt;Spellchecker&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Locate the dictionaries in the folder where the plugin is. Dictionaries
must use UTF-8 encoding.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configure the path of the dictionaries. This can be a URL or a path
relative to the folder where the plugin is located.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We will describe each step in detail below.&lt;/p&gt;
&lt;section id="step-1-install-nbextensions"&gt;
&lt;h3&gt;Step 1: Install nbextensions&lt;/h3&gt;
&lt;p&gt;There is a list of plugins that add some commonly used functionality to
the Jupyter notebook.&lt;/p&gt;
&lt;p&gt;Type the following in a terminal, to install it using PIP.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_174382fbcaf64c1cbcbe65ae3fc9d585-1" name="rest_code_174382fbcaf64c1cbcbe65ae3fc9d585-1" href="https://nicoguaro.github.io/posts/ortografia_jupyter/#rest_code_174382fbcaf64c1cbcbe65ae3fc9d585-1"&gt;&lt;/a&gt;pip install jupyter_contrib_nbextensions
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, if Anaconda is being used the &lt;strong&gt;recommended method&lt;/strong&gt; is to use
&lt;code class="docutils literal"&gt;conda&lt;/code&gt;, as shown below.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_520b85e880e04ba4a1e60220f3a87d52-1" name="rest_code_520b85e880e04ba4a1e60220f3a87d52-1" href="https://nicoguaro.github.io/posts/ortografia_jupyter/#rest_code_520b85e880e04ba4a1e60220f3a87d52-1"&gt;&lt;/a&gt;conda install -c conda-forge jupyter_contrib_nbextensions
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should install the plugins and also the
&lt;a class="reference external" href="https://github.com/Jupyter-contrib/jupyter_nbextensions_configurator"&gt;configuration interface&lt;/a&gt;.
In the main menu of Jupyter notebook a new tab named &lt;em&gt;Nbextension&lt;/em&gt; will
appear. Here you can choose the add-ons to use. The appearance is
as follows.&lt;/p&gt;
&lt;img alt="Graphical interface for Jupyter plugins." class="align-center" src="https://nicoguaro.github.io/images/ortografia_jupyter/interfaz_nbextensions.png" style="width: 600px;"&gt;
&lt;p&gt;Some recommended plugins are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Collapsible Headings:&lt;/strong&gt; that allows to hide sections of the documents.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;RISE:&lt;/strong&gt; that turns notebooks into presentations.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="step-2-dictionaries-for-spanish"&gt;
&lt;h3&gt;Step 2: Dictionaries for Spanish&lt;/h3&gt;
&lt;p&gt;The documentation of &lt;a class="reference external" href="https://nicoguaro.github.io/posts/ortografia_jupyter/&amp;lt;https:/jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/spellchecker/README.html"&gt;Spellchecker&lt;/a&gt; suggests using a Python script to
download dictionaries from project &lt;a class="reference external" href="https://chromium.googlesource.com/chromium/deps/hunspell_dictionaries/+/master"&gt;Chromium&lt;/a&gt;.
However, these are encoded in  ISO-8859-1 (western) and it fails
for characters with accents or tildes. So, to avoid problems the
dictionary must be &lt;a class="reference external" href="https://en.wikipedia.org/wiki/UTF-8"&gt;UTF-8&lt;/a&gt;.
They can be downloaded at &lt;a class="reference external" href="https://nicoguaro.github.io/downloads/dict_es_ES.zip"&gt;this link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once you have the dictionaries, they must be located in the path of the
plugin. On my computer this would be&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_41ec8565872f4a73932c50c748eea996-1" name="rest_code_41ec8565872f4a73932c50c748eea996-1" href="https://nicoguaro.github.io/posts/ortografia_jupyter/#rest_code_41ec8565872f4a73932c50c748eea996-1"&gt;&lt;/a&gt;~/.local/share/jupyter/nbextensions/spellchecker/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and within this we will place them in&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_39589280c6974ce3becdab9a100ada66-1" name="rest_code_39589280c6974ce3becdab9a100ada66-1" href="https://nicoguaro.github.io/posts/ortografia_jupyter/#rest_code_39589280c6974ce3becdab9a100ada66-1"&gt;&lt;/a&gt;~/.local/share/jupyter/nbextensions/spellchecker/typo/dictionaries
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This location is arbitrary, the important thing is that we need to know
the relative path to the plugin.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="step-3-plugin-configuration"&gt;
&lt;h3&gt;Step 3: Plugin Configuration&lt;/h3&gt;
&lt;p&gt;Now, in the &lt;em&gt;Nbextensions&lt;/em&gt; tab we select the plugin and fill the fields
with the information from our dictionary:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;language code to use with typo.js: &lt;code class="docutils literal"&gt;es_ES&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;url for the dictionary .dic file to use: &lt;code class="docutils literal"&gt;./typo/dictionaries/es_ES.dic&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;url for the dictionary .aff file to use: &lt;code class="docutils literal"&gt;./typo/dictionaries/es_ES.aff&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is shown below.&lt;/p&gt;
&lt;img alt="Configuration with local files." class="align-center" src="https://nicoguaro.github.io/images/ortografia_jupyter/config_local.png" style="width: 600px;"&gt;
&lt;p&gt;Another option is to use the URL for the files. The dictionaries of the
project &lt;a class="reference external" href="https://hunspell.github.io/"&gt;hunspell&lt;/a&gt; in UTF-8 are available
at &lt;a class="reference external" href="https://github.com/wooorm/dictionaries"&gt;https://github.com/wooorm/dictionaries&lt;/a&gt;. In this case, the configuration
would be:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;language code to use with typo.js: &lt;code class="docutils literal"&gt;es_ES&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;url for the dictionary .dic file to use: &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;https://raw.githubusercontent.com/wooorm/dictionaries/master/dictionaries/es/index.dic&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;url for the dictionary .aff file to use: &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;https://raw.githubusercontent.com/wooorm/dictionaries/master/dictionaries/es/index.aff&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And it is shown below.&lt;/p&gt;
&lt;img alt="Configuration with remote files." class="align-center" src="https://nicoguaro.github.io/images/ortografia_jupyter/config_url.png" style="width: 600px;"&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>data science</category><category>python</category><category>scientific computing</category><category>tutorial</category><guid>https://nicoguaro.github.io/posts/ortografia_jupyter/</guid><pubDate>Tue, 20 Aug 2019 19:45:41 GMT</pubDate></item></channel></rss>