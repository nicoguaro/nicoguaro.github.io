<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nicolás' blog (Publicaciones sobre investigación)</title><link>https://nicoguaro.github.io/</link><description></description><atom:link href="https://nicoguaro.github.io/es/categories/investigacion.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2022 &lt;a href="mailto:nicoguarin@gmail.com"&gt;Nicolás Guarín-Zapata&lt;/a&gt; 
&lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;
&lt;img alt="Creative Commons License"
style="border-width:0"
src="https://i.creativecommons.org/l/by/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Wed, 02 Nov 2022 17:08:29 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Escritura técnica: usando figuras</title><link>https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;En una &lt;a class="reference external" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing"&gt;publicación anterior&lt;/a&gt; mencioné algunos aspectos
generales de la escritura técnica. En este me gustaría hablar sobre la
inclusión de figuras en documentos técnicos.&lt;/p&gt;
&lt;section id="formatos-de-graficos"&gt;
&lt;h2&gt;Formatos de gráficos&lt;/h2&gt;
&lt;p&gt;Primero, debo mencionar que hay dos tipos principales de gráficos, a saber:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;gráficos vectoriales; y&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;gráficos de mapa de bits.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sirven para diferentes propósitos y deberíamos usarlos teniendo esto en cuenta.
Por ejemplo, para diagramas o esquemas es mejor utilizar formatos vectoriales,
en general. Por otro lado, los formatos ráster son más adecuados para imágenes
como fotografías o ilustraciones.&lt;/p&gt;
&lt;section id="graficos-vectoriales"&gt;
&lt;h3&gt;Gráficos vectoriales&lt;/h3&gt;
&lt;p&gt;Una &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Vector_graphics"&gt;imagen vectorial&lt;/a&gt; es una
imagen que está conformada por entidades geométricas. En este caso, la
información almacenada no es punto a punto sino &lt;em&gt;la construcción&lt;/em&gt; de las formas
que la conforman. Por esta razón, estas imágenes no se &lt;em&gt;pixelan&lt;/em&gt; ya que que la
información con la que se cuenta es de cómo se construye. Este tipo de imágenes
es la mejor opción para esquemas y diagramas, ya que sólo se almacenaría la
información de trazos y texto. El estándar &lt;em&gt;de facto&lt;/em&gt; para este tipo de imágenes
es PDF—este es el tipo que uso en mis documentos de \(\LaTeX\)—. Aunque PDF
es el &lt;em&gt;estándar&lt;/em&gt;, mi formato preferido es &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Scalable_Vector_Graphics"&gt;SVG (Scalable Vector Graphics)&lt;/a&gt; que es un estándar
a través de internet y que se puede renderizar en la mayoría de navegadores
&lt;em&gt;modernos&lt;/em&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="graficos-raster"&gt;
&lt;h3&gt;Gráficos ráster&lt;/h3&gt;
&lt;p&gt;Una &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Raster_graphics"&gt;imagen ráster&lt;/a&gt; es una
imagen que está representada por un arreglo (o rejilla rectangular) de píxeles.
En otras palabras, la información del color que hay en cada uno de los puntos
de la imagen. Los formatos más populares almacenan la información de forma
comprimida. Para gráficos de alto contraste (como esquemas o diagramas) el mejor
formato es PNG. Si se tienen animaciones, sería preferible usar GIF. Y en el
caso de fotografías es mejor usar JPG.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="resumen-para-los-formatos"&gt;
&lt;h3&gt;Resumen para los formatos&lt;/h3&gt;
&lt;p&gt;Resumiendo, deberíamos usar imágenes JPG (solo) para fotografías y SVG para
esquemas/diagramas. Otro atributo que puede resultar útil es la gestión de
capas. Tener varias capas brinda la opción de apilar diferentes tipos de
información por separado. Por ejemplo, puede tener el fondo, la imagen y las
anotaciones en diferentes capas. De esta forma se puede modificar sólo la parte
de la figura de interés. Se puede automatizar la traducción de las anotaciones
de esta manera sin muchos problemas. Los formatos como SVG permiten tener
varias capas. En el caso de los formatos ráster, tenemos la opción de utilizar
TIFF.&lt;/p&gt;
&lt;p&gt;En cuanto al software para generar/editar este tipo de imágenes debo decir
que existe una gran cantidad de programas que permiten exportar a estos
formatos: Python/Matplotlib, Matlab, Inkscape, Adobe Illustrator, GIMP,
Photoshop, LibreOffice. Si el gráfico se genera a partir de un cálculo o una
serie de datos, uso Matplotlib. Si, en cambio, queremos hacer un esquema, mi
herramienta de elección es &lt;a class="reference external" href="http://www.inkscape.org/"&gt;Inkscape&lt;/a&gt;. Este programa
está destinado a ser una alternativa gratuita a programas como Adobe
Illustrator, y lo logra. Obviamente, se puede usar Illustrator o Corel Draw para
esto. Si el único uso es hacer esquemas técnicos, creo que sería un desperdicio.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="disenando-figuras-para-documentos"&gt;
&lt;h2&gt;Diseñando figuras para documentos&lt;/h2&gt;
&lt;p&gt;Mi sugerencia es partir del tamaño nominal de la figura del documento. Para la
mayoría de nuestros documentos, las cifras seguirán siendo digitales y esto
puede parecer contradictorio. Sin embargo, encuentro este enfoque mucho más
fácil. Una de las razones es que todavía incrustamos nuestra figura en un
documento con un tamaño nominal. Además, a la hora de pensar en el tamaño de
la fuente es habitual que tengamos como referencia el texto impreso. Además de
eso, debemos considerar que el ojo humano tiene un límite de resolución, por lo
que no podemos simplemente reducir nuestras figuras.&lt;/p&gt;
&lt;p&gt;Además, no existe la resolución de una imagen digital. La resolución se refiere
a una densidad de píxeles por unidad de longitud. Esto tiene sentido al imprimir
imágenes, pero no en el caso digital. Sin embargo, las figuras tienen un tamaño
nominal y, por lo tanto, una resolución nominal. Es decir, el número de píxeles
en una dirección dividido por su tamaño nominal. Es una buena idea considerar
una resolución mínima de 150 ppp (puntos por pulgada). Por ejemplo, una imagen
de 6 × 3 pulgadas. Esta imagen tendría un tamaño de (a 150 ppp) de
900 px × 450 px.&lt;/p&gt;
&lt;p&gt;El siguiente código de Python crea una figura de tamaño 6 in × 3 in, y grafica
la función \(f(x) = \sin(x^2)\) y la guarda como una imagen de tamaño
900 in × 450 in.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-1" name="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-1" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;a id="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-2" name="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-2" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;a id="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-3" name="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-3" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;linewidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-4" name="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-4" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-5" name="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-5" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-6" name="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-6" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-7" name="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-7" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-8" name="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-8" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-9" name="rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-9" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_5c7a0e53464b4cb7827fe9a1ccc530ed-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savefig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"fig_ex_python.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dpi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Y el siguiente código de Matlab.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code matlab"&gt;&lt;a id="rest_code_ed81dbe40f614da1b9f850e710ce9475-1" name="rest_code_ed81dbe40f614da1b9f850e710ce9475-1" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_ed81dbe40f614da1b9f850e710ce9475-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ed81dbe40f614da1b9f850e710ce9475-2" name="rest_code_ed81dbe40f614da1b9f850e710ce9475-2" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_ed81dbe40f614da1b9f850e710ce9475-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Units&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'inches'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ed81dbe40f614da1b9f850e710ce9475-3" name="rest_code_ed81dbe40f614da1b9f850e710ce9475-3" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_ed81dbe40f614da1b9f850e710ce9475-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ed81dbe40f614da1b9f850e710ce9475-4" name="rest_code_ed81dbe40f614da1b9f850e710ce9475-4" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_ed81dbe40f614da1b9f850e710ce9475-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ed81dbe40f614da1b9f850e710ce9475-5" name="rest_code_ed81dbe40f614da1b9f850e710ce9475-5" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_ed81dbe40f614da1b9f850e710ce9475-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ed81dbe40f614da1b9f850e710ce9475-6" name="rest_code_ed81dbe40f614da1b9f850e710ce9475-6" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_ed81dbe40f614da1b9f850e710ce9475-6"&gt;&lt;/a&gt;&lt;span class="nb"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'LineWidth'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ed81dbe40f614da1b9f850e710ce9475-7" name="rest_code_ed81dbe40f614da1b9f850e710ce9475-7" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_ed81dbe40f614da1b9f850e710ce9475-7"&gt;&lt;/a&gt;&lt;span class="nb"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'FontSize'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ed81dbe40f614da1b9f850e710ce9475-8" name="rest_code_ed81dbe40f614da1b9f850e710ce9475-8" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_ed81dbe40f614da1b9f850e710ce9475-8"&gt;&lt;/a&gt;&lt;span class="nb"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'y'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'FontSize'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ed81dbe40f614da1b9f850e710ce9475-9" name="rest_code_ed81dbe40f614da1b9f850e710ce9475-9" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_ed81dbe40f614da1b9f850e710ce9475-9"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'PaperSize'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ed81dbe40f614da1b9f850e710ce9475-10" name="rest_code_ed81dbe40f614da1b9f850e710ce9475-10" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/#rest_code_ed81dbe40f614da1b9f850e710ce9475-10"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'fig_ex_matlab'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'-dpng'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'-r150'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A continuación resumo algunos tamaños para artículos, pósters y diapositivas.&lt;/p&gt;
&lt;section id="articulos"&gt;
&lt;h3&gt;Artículos&lt;/h3&gt;
&lt;p&gt;Para un artículo es común usar tamaño carta que es 8.5 in × 11 in
(215.9 mm × 279.4 mm). Otro formato común es A4 que es 210 mm × 297 mm
(8.27 in × 11.7 in).&lt;/p&gt;
&lt;p&gt;Una guía para tamaños comunes es la siguiente:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;ancho de 1.0 columna: 90 mm (3.5 in);&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ancho de 1.5 columna: 140 mm (5.5 in);&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ancho de 2.0 columna: 190 mm (6.5 in);&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;y se muestra en la siguiente imagen.&lt;/p&gt;
&lt;img alt="Anchos de figuras comparados con papel tamaño carta." class="align-center" src="https://nicoguaro.github.io/images/tech_writing/sizes.png" style="width: 400px;"&gt;
&lt;p&gt;Si consideramos una &lt;em&gt;resolución&lt;/em&gt; de 300 ppi, tenemos los siguientes números de
píxeles horizontalmente&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;ancho de 1.0 columna: 1050 píxeles;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ancho de 1.5 columna: 1650 píxeles; y&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ancho de 2.0 columna: 1950 píxeles.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tenga en cuenta que un monitor HD tiene 1920 píxeles en la dirección horizontal.
Esto significa que se necesita un monitor HD para ser capaz de ver tanto
píxeles.&lt;/p&gt;
&lt;p&gt;Respecto al tamaño del texto, es común tener tamaños entre 8 y 12 pts para
figuras.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="posters"&gt;
&lt;h3&gt;Pósters&lt;/h3&gt;
&lt;p&gt;En el caso de papel tamaño A0 (841 mm × 1189 mm, 33 in × 47 in) los tamaños
serían algo como:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;ancho de 1.0 columna: 360 mm (14 in);&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ancho de 1.5 columna: 560 mm (22 in); y&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ancho de 2.0 columna: 760 mm (26 in).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tenga en cuenta que un póster puede que no encaje tan bien en el formato
de dos columans. Sin embargo, creo que la referencia sigue siendo útil.&lt;/p&gt;
&lt;p&gt;Respecto al tamaño dl texto en pósters es una buena idea mantenerlo por encima
de 24 pts (ver referencia 3).&lt;/p&gt;
&lt;/section&gt;
&lt;section id="diapositivas"&gt;
&lt;h3&gt;Diapositivas&lt;/h3&gt;
&lt;p&gt;En el caso de diapositivas hay dos relaciones de aspecto comunes 16:9 y 4:3.
Además, diferentes programas usan diferentes tamaños nominales. La siguiente
tabla muestra los tamaños nomiales para LibreOffice Impress y MS Power Point.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;16:9&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;4:3&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;LibreOffice Impress&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;11.02 in × 6.20 in&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;11.02 in × 8.00 in&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;MS Power Point&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;13.32 in × 7.50 in&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;10.00 in × 7.50 in&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;section id="referencias"&gt;
&lt;h3&gt;Referencias&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Matthew Butterick (2019). &lt;a class="reference external" href="https://practicaltypography.com/"&gt;Butterick's Practical Typography&lt;/a&gt;.
Segunda edición, Matthew Butterick.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rougier, Nicolas P., Michael Droettboom, y Philip E. Bourne (2014).
“Ten Simple Rules for Better Figures.” PLOS Computational Biology 10(9):e1003833.
DOI: 10.1371/journal.pcbi.1003833.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Erren, Thomas C., y Philip E. Bourne. 2007.
“Ten Simple Rules for a Good Poster Presentation.”
PLOS Computational Biology 3(5):e102. DOI: 10.1371/journal.pcbi.0030102&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Elsevier. (n.d.). "Artwork Overview." Fecha de acceso: Noviembre 1, 2021,
de &lt;a class="reference external" href="https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-overview"&gt;https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-overview&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Elsevier. (n.d.). "Artwork sizing." Fecha de acceso: Noviembre 1, 2021,
de &lt;a class="reference external" href="https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-sizing"&gt;https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-sizing&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Journal of applied physics (n.d.). "Preparing Your Manuscript: Authors
Instruction." Fecha de acceso: Noviembre 1, 2021, de &lt;a class="reference external" href="https://aip.scitation.org/jap/authors/manuscript"&gt;https://aip.scitation.org/jap/authors/manuscript&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>escritura</category><category>figuras</category><category>inkscape</category><category>investigación</category><category>latex</category><category>libreoffice</category><category>tipografía</category><guid>https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs/</guid><pubDate>Wed, 03 Nov 2021 17:53:40 GMT</pubDate></item><item><title>Escritura técnica</title><link>https://nicoguaro.github.io/es/posts/tech_writing/tech_writing/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;Esta es la primera publicación sobre redacción técnica &lt;a class="footnote-reference brackets" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing/#footnote-1" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;*&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; de una serie que
crearé poco a poco. La escritura técnica es algo con lo
que la mayoría de nosotros tenemos que lidiar en diferentes contextos. Por
ejemplo, en cursos universitarios, publicaciones de investigación,
documentación de software. La idea principal de la serie es mencionar algunos
de los trucos que he aprendido a lo largo de los años y algunas herramientas
que pueden ser útiles.&lt;/p&gt;
&lt;p&gt;Las publicaciones futuras serán (probablemente) sobre:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math"&gt;Uso de ecuaciones&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_figs"&gt;Uso de figuras&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Uso de tablas; y&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gestión de referencias bibliográficas.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="esta-publicacion"&gt;
&lt;h2&gt;Esta publicación&lt;/h2&gt;
&lt;p&gt;Como se mencionó anteriormente, la escritura técnica es algo con lo que muchas
personas tienen que lidiar. Esta es una habilidad que a veces se pasa por alto,
pero no debería. De acuerdo con la
&lt;a class="reference external" href="https://www.bls.gov/ooh/media-and-communication/technical-writers.htm"&gt;U.S. Bureau of Labor Statistics&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Los redactores técnicos preparan manuales, guías prácticas,
artículos de revistas y otros documentos de respaldo para comunicar
información compleja y técnica con mayor facilidad.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Y es una habilidad deseada en el lugar de trabajo. Se espera que su demanda crezca
alrededor del 10% en la década actual.&lt;/p&gt;
&lt;section id="tipografia"&gt;
&lt;h3&gt;Tipografía&lt;/h3&gt;
&lt;p&gt;Lo primero que debo mencionar es que escribir documentos es
tipografía ya que estamos &lt;em&gt;diseñando con texto&lt;/em&gt; (Butterick, 2019). Por lo tanto,
deberíamos considerarnos tipógrafos, ya que constantemente diseñamos documentos.&lt;/p&gt;
&lt;p&gt;Sugeriría echar un vistazo a "Butterick's Practical Typography"
ya que es un libro muy bueno sobre el tema y es fácil de leer. Voy a
mencionar algunos puntos importantes de acuerdo con la sección
"Tipografía en diez minutos":&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;La selección tipográfica más importante está en el cuerpo del texto.
Esto se debe al hecho de que es la mayor parte del documento.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Elija un tamaño de texto entre 10-12 puntos para documentos impresos
y 15-25 píxeles para documentos digitales.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;El espacio entre líneas debe estar entre 120-145% del tamaño de la letra.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;La longitud de la línea debe tener entre 45 y 90 caracteres. Esto es
aproximadamente 2 o 3 alfabetos en minúsculas:&lt;/p&gt;
&lt;p&gt;abcdefghijklmnñopqrstuvwxyzabcdefghijklmnñopqrstuvwxyzabcd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cuidado con la selección de su fuente. Intente evitar las fuentes
predeterminadas como Arial, Calibri o Times New Roman.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="editores"&gt;
&lt;h3&gt;Editores&lt;/h3&gt;
&lt;p&gt;Otro punto que quiero tocar en esta publicación es el de los editores. La
primera pregunta que surge es "¿qué editor debo usar?". La respuesta corta es:
&lt;strong&gt;usa lo que tus colegas estén usando&lt;/strong&gt;. Ese es mi mejor consejo; de esa
manera tienes personas con quienes hablar sobre tus dudas.&lt;/p&gt;
&lt;p&gt;La respuesta larga ... es que cada editor tiene sus puntos débiles y fuertes.
Yo he escrito artículos científicos en LaTeX, LibreOffice Writer y MS Word;
todos se ven profesionales. Entonces, al final, puedes escribir tu
documentos de varias maneras y lograr un resultado similar. Yo prefiero usar
LaTeX para documentos largos, ya que se centra en la estructura del
documento en lugar de la apariencia y esta es la forma en que uno debe
administrar un documento largo como una disertación, en mi opinión.&lt;/p&gt;
&lt;p&gt;Si solo quieres que elija un editor y te lo sugiera, diría que
&lt;a class="reference external" href="https://www.libreoffice.org/"&gt;LibreOffice&lt;/a&gt;. Una buena referencia es
"Designing with LibreOffice". Una vez que aprendas cómo usar estilos, preguntarás
cómo has estado escribiendo todos los documentos hasta ahora.&lt;/p&gt;
&lt;p&gt;Hay dos grupos de editores que voy a discutir:
WYSIWYG (siglas en inglés para "Lo que ves es lo que obtienes") y
editores basados en marcado.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;WYSIWYG. Esta categoría es la que la mayoría de la gente conoce.
Dos ejemplos son:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;LibreOffice Writer; y&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microsoft Word.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Los editores basados en marcado dependen de las marcas en el "texto" para
diferenciar secciones y estilos. En este caso, su texto parece código,
como se ve en la siguiente imagen&lt;/p&gt;
&lt;img alt="/images/rst_code.png" src="https://nicoguaro.github.io/images/rst_code.png"&gt;
&lt;p&gt;Algunos ejemplos son:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;LaTeX;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.markdownguide.org/getting-started"&gt;Markdown&lt;/a&gt;; y&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docutils.sourceforge.io/rst.html"&gt;reStructuredtext&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Independientemente de cuál sea tu editor principal, sugiero utilizar
&lt;a class="reference external" href="https://pandoc.org/"&gt;Pandoc&lt;/a&gt;. Te permite convertir entre varios
formatos, haciendo el proceso un poco más fácil. Incluso hay un editor
basado completamente en él llamado &lt;a class="reference external" href="https://panwriter.com/"&gt;Panwriter&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Matthew Butterick (2019). &lt;a class="reference external" href="https://practicaltypography.com/"&gt;Butterick's Practical Typography&lt;/a&gt;.
Segunda edición, Matthew Butterick.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wikibooks contributors. (2020). &lt;a class="reference external" href="https://en.wikibooks.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt;.
Wikibooks, The Free Textbook Project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bruce Byfield (2016). &lt;a class="reference external" href="https://designingwithlibreoffice.com/"&gt;Designing with LibreOffice&lt;/a&gt;.
Friends of OpenDocument, Inc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deville, S. (2015). &lt;a class="reference external" href="https://sylvaindeville.net/2015/07/17/writing-academic-papers-in-plain-text-with-markdown-and-jupyter-notebook/"&gt;Writing academic papers in plain text with Markdown and Jupyter notebook&lt;/a&gt;.
Sylvain Deville.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Eric Holscher (2016). &lt;a class="reference external" href="https://www.ericholscher.com/blog/2016/jul/1/sphinx-and-rtd-for-writers/"&gt;An introduction to Sphinx and Read the Docs for Technical Writers&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class="footnote brackets" id="footnote-1" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing/#footnote-reference-1"&gt;*&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;Esta publicación está (algo) relacionada con una
&lt;a class="reference external" href="https://nicoguaro.github.io/es/posts/tech_writing/herramientas-investigacion/"&gt;publicación anterior&lt;/a&gt;
donde discutí sobre algunas herramientas de investigación que la mayoría
de nosotros necesitamos pero que comúnmente no se enseñan de manera formal.&lt;/p&gt;
&lt;/aside&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>escritura</category><category>investigación</category><category>latex</category><category>libreoffice</category><category>tipografía</category><guid>https://nicoguaro.github.io/es/posts/tech_writing/tech_writing/</guid><pubDate>Thu, 28 May 2020 20:53:40 GMT</pubDate></item><item><title>Escritura técnica: usando matemáticas</title><link>https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;En una &lt;a class="reference external" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing"&gt;publicación anterior&lt;/a&gt; mencioné algunos aspectos
generales de la escritura técnica. En este me gustaría hablar sobre la
inclusión de expresiones matemáticas en documentos técnicos.&lt;/p&gt;
&lt;p&gt;Hay dos formas principales de incluir matemáticas en documentos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;utilizando texto; y&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;utilizando una interfaz gráfica.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Usar una interfaz gráfica, como el editor de ecuaciones en LibreOffice Writer o
MS Word, o &lt;a class="reference external" href="http://www.dessci.com/en/products/mathtype/"&gt;MathType&lt;/a&gt; es
conveniente. No es necesario memorizar nada y se pueden mirar las expresiones
mientras se crean. Sin embargo, puede ser algo lento en comparación con el uso
de entrada de texto —una vez que se está cómodo con la sintaxis—.&lt;/p&gt;
&lt;p&gt;Hay dos tipos de ecuaciones utilizadas en Internet:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/MathML"&gt;MathML&lt;/a&gt; es un
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/World_Wide_Web_Consortium"&gt;estándar W3C&lt;/a&gt;
para ecuaciones y está incluido en HTML5, por lo que funcionaría en todos los
navegadores modernos. El problema con este es que no está diseñado para ser
escrito a mano. Por tanto, uno puede usarlo si tiene alguna forma automática
de generar el código.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.overleaf.com/learn/latex/Mathematical_expressions"&gt;LaTeX&lt;/a&gt;
es mi forma sugerida de escribir ecuaciones. La curva de aprendizaje podría
ser un un poco empinada al principio pero vale la pena.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Una herramienta que ayuda con las ecuaciones es
&lt;a class="reference external" href="https://mathpix.com/"&gt;MathPix Snip&lt;/a&gt; que genera automáticamente código
LaTeX o MathML a partir de una imagen, incluso una escrita a mano. Otra
herramienta que es realmente útil es
&lt;a class="reference external" href="http://detexify.kirelabs.org/classify.html"&gt;Detexify&lt;/a&gt; que permite
dibujar un símbolo y proporciona la sintaxis de LaTeX de este.&lt;/p&gt;
&lt;p&gt;En el resto de la publicación mostraré mis sugerencias para trabajar
con ecuaciones en LibreOffice y MS Word. Si estás utilizando LaTeX o
MarkDown/ReStructuredText para tus documentos ya estás utilizando
LaTeX para tus ecuaciones.&lt;/p&gt;
&lt;section id="libreoffice"&gt;
&lt;h2&gt;LibreOffice&lt;/h2&gt;
&lt;p&gt;LibreOffice tiene su propio editor de ecuaciones con su propia sintaxis y
funciona bien para expresiones pequeñas, pero se complica para ecuaciones
grandes o largas manipulaciones algebraicas. Para LibreOffice sugeriría usar
&lt;a class="reference external" href="http://roland65.free.fr/texmaths/install.html"&gt;TexMaths&lt;/a&gt;, es fácil de
usar y funciona para el procesador de textos (Writer) y presentaciones (Impress).
Supongo que también funciona para hojas de cálculo (Calc), pero no recuerdo
haber usado ecuaciones en una.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="ms-office"&gt;
&lt;h2&gt;MS Office&lt;/h2&gt;
&lt;p&gt;MS Office también tiene su propio editor de ecuaciones, funciona bien y es
fácil de usar. Sin embargo, el mismo problema aparece cuando quieres expresiones
largas. Una opción es usar directamente
&lt;a class="reference external" href="https://docs.microsoft.com/en-us/archive/blogs/murrays/latex-math-in-office"&gt;LaTeX en Office&lt;/a&gt;
pero prefiero usar
&lt;a class="reference external" href="http://www.jonathanleroux.org/software/iguanatex/download.html"&gt;IguanaTex&lt;/a&gt;.
Es un complemento que permite ingresar ecuaciones de forma similar a TexMaths en
LibreOffice.&lt;/p&gt;
&lt;p&gt;También puede pegar directamente las ecuaciones MathML en MS Word (&amp;gt;2013 y Windows).&lt;/p&gt;
&lt;/section&gt;
&lt;section id="usa-sympy"&gt;
&lt;h2&gt;Usa SymPy&lt;/h2&gt;
&lt;p&gt;Independientemente de la herramienta que use para escribir sus documentos,
sugiero usar un &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Sistema_algebraico_computacional"&gt;CAS&lt;/a&gt;
(del inglés Computer Algebra System), como Mathematica o SymPy. Estos programas
permiten la generación automática de LaTeX y MathML a partir de expresiones y
esto facilita mucho el proceso.&lt;/p&gt;
&lt;p&gt;Veamos un ejemplo. Supongamos que tenemos la función&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
f(x) = \exp(-x^2) \sin(3*x)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;y queremos calcular su segunda derivada&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
f''(x) = \left(- 12 x \cos{\left(3 x \right)} + 2 \left(2 x^{2} - 1\right) \sin{\left(3 x \right)} - 9 \sin{\left(3 x \right)}\right) e^{- x^{2}}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;El siguiente bloque de código nos da el código LaTex&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_1fc774cf04b34e57a99fc9e363ab3520-1" name="rest_code_1fc774cf04b34e57a99fc9e363ab3520-1" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_1fc774cf04b34e57a99fc9e363ab3520-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sympy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_1fc774cf04b34e57a99fc9e363ab3520-2" name="rest_code_1fc774cf04b34e57a99fc9e363ab3520-2" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_1fc774cf04b34e57a99fc9e363ab3520-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;init_session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_1fc774cf04b34e57a99fc9e363ab3520-3" name="rest_code_1fc774cf04b34e57a99fc9e363ab3520-3" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_1fc774cf04b34e57a99fc9e363ab3520-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_1fc774cf04b34e57a99fc9e363ab3520-4" name="rest_code_1fc774cf04b34e57a99fc9e363ab3520-4" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_1fc774cf04b34e57a99fc9e363ab3520-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;fxx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_1fc774cf04b34e57a99fc9e363ab3520-5" name="rest_code_1fc774cf04b34e57a99fc9e363ab3520-5" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_1fc774cf04b34e57a99fc9e363ab3520-5"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fxx&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;que es&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code latex"&gt;&lt;a id="rest_code_8dce929f530c4afc915f0552d5b7663c-1" name="rest_code_8dce929f530c4afc915f0552d5b7663c-1" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_8dce929f530c4afc915f0552d5b7663c-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(- 12 x &lt;span class="k"&gt;\cos&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt; + 2 &lt;span class="k"&gt;\left&lt;/span&gt;(2 x&lt;span class="nb"&gt;^{&lt;/span&gt;2&lt;span class="nb"&gt;}&lt;/span&gt; - 1&lt;span class="k"&gt;\right&lt;/span&gt;) &lt;span class="k"&gt;\sin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt; - 9 &lt;span class="k"&gt;\sin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt;&lt;span class="k"&gt;\right&lt;/span&gt;) e&lt;span class="nb"&gt;^{&lt;/span&gt;- x&lt;span class="nb"&gt;^{&lt;/span&gt;2&lt;span class="nb"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Este corresponde con el código que usé arriba para representar la ecuación.&lt;/p&gt;
&lt;p&gt;Si quisiéramos el código MathML de esa expresión podríamos usar
el siguiente fragmento de código&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_dd068e4468ca45e6b47d76040f481cce-1" name="rest_code_dd068e4468ca45e6b47d76040f481cce-1" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_dd068e4468ca45e6b47d76040f481cce-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sympy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_dd068e4468ca45e6b47d76040f481cce-2" name="rest_code_dd068e4468ca45e6b47d76040f481cce-2" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_dd068e4468ca45e6b47d76040f481cce-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;init_session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_dd068e4468ca45e6b47d76040f481cce-3" name="rest_code_dd068e4468ca45e6b47d76040f481cce-3" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_dd068e4468ca45e6b47d76040f481cce-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_dd068e4468ca45e6b47d76040f481cce-4" name="rest_code_dd068e4468ca45e6b47d76040f481cce-4" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_dd068e4468ca45e6b47d76040f481cce-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;fxx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_dd068e4468ca45e6b47d76040f481cce-5" name="rest_code_dd068e4468ca45e6b47d76040f481cce-5" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_dd068e4468ca45e6b47d76040f481cce-5"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mathml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fxx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;printer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"presentation"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;observe el argumento opcional &lt;code class="docutils literal"&gt;printer = "presentation"&lt;/code&gt;. Si queremos agregar
esto a MS Word, por ejemplo, podríamos agregar la salida (que no voy a
mostrar porque es realmente larga) dentro del siguiente código&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code xml"&gt;&lt;a id="rest_code_68da9847204941d3b08f24653b7ff2e4-1" name="rest_code_68da9847204941d3b08f24653b7ff2e4-1" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_68da9847204941d3b08f24653b7ff2e4-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;math&lt;/span&gt; &lt;span class="na"&gt;xmlns =&lt;/span&gt; &lt;span class="s"&gt;"http://www.w3.org/1998/Math/MathML"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_68da9847204941d3b08f24653b7ff2e4-2" name="rest_code_68da9847204941d3b08f24653b7ff2e4-2" href="https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/#rest_code_68da9847204941d3b08f24653b7ff2e4-2"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;/math&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cuando se usa Jupyter Notebook, esto se puede hacer gráficamente con un
clic derecho sobre la expresión. Y se muestra el siguiente menú.&lt;/p&gt;
&lt;img alt="/images/jupyter_export_eqs.png" src="https://nicoguaro.github.io/images/jupyter_export_eqs.png"&gt;
&lt;/section&gt;
&lt;section id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;“How to Insert Equations in Microsoft Word.” WikiHow,
&lt;a class="reference external" href="https://www.wikihow.com/Insert-Equations-in-Microsoft-Word"&gt;https://www.wikihow.com/Insert-Equations-in-Microsoft-Word&lt;/a&gt;.
Fecha de acceso: Agosto 3, 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“Copy MathML into Word to Use as Equation.” Stack Overflow,
&lt;a class="reference external" href="https://stackoverflow.com/questions/25430775/copy-mathml-into-word-to-use-as-equation"&gt;https://stackoverflow.com/questions/25430775/copy-mathml-into-word-to-use-as-equation&lt;/a&gt;.
Fecha de acceso: Agosto 3, 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“Python - Output Sympy Equation to Word Using Mathml.” Stack Overflow,
&lt;a class="reference external" href="https://stackoverflow.com/questions/40921128/output-sympy-equation-to-word-using-mathml"&gt;https://stackoverflow.com/questions/40921128/output-sympy-equation-to-word-using-mathml&lt;/a&gt;.
Fecha de acceso: Agosto 3, 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OERPUB (2016), “Mathconverter”, &lt;a class="reference external" href="https://github.com/oerpub/mathconverter"&gt;https://github.com/oerpub/mathconverter&lt;/a&gt;,
Fecha de acceso: Agosto 3, 2020.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description><category>escritura</category><category>investigación</category><category>latex</category><category>libreoffice</category><category>matemáticas</category><category>ms-word</category><category>tipografía</category><guid>https://nicoguaro.github.io/es/posts/tech_writing/tech_writing_math/</guid><pubDate>Thu, 28 May 2020 20:53:40 GMT</pubDate></item><item><title>Herramientas (auxiliares) para Investigación</title><link>https://nicoguaro.github.io/es/posts/herramientas-investigacion/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;En esta entrada quiero hablar de algunas herramientas (...o algo así)
que son útiles en el día a día de la investigación, pero que no suelen
ser tan populares por ser en cierta forma &lt;em&gt;tangenciales&lt;/em&gt; al área
específica en la que cada uno trabaja.&lt;/p&gt;
&lt;section id="scripting"&gt;
&lt;h2&gt;Scripting&lt;/h2&gt;
&lt;p&gt;Un &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Scripting_language"&gt;script&lt;/a&gt;  es un
programa &lt;em&gt;usualmente&lt;/em&gt; simple que realiza una serie de tareas. ¡Lo
siento! trato de ceñirme al castellano pero no me gustan las
traducciones para este término (archivo de órdenes, archivo de
procesamiento por lotes o guion). Si existe una tarea que debe ser
hecha más de... cinco veces (el número varía de acuerdo a la
paciencia), entonces creo que es algo que podemos pedirle al
computador que haga esta tarea por nosotros. En otras palabras:
podemos automatizar ese trabajo. Algunas tareas que pueden ser una
buena alternativa para automatizar son: renombrar 100 archivos,
convertir un archivo de un formato a otro (p. ej., STL a OBJ), leer
387 archivos con información sobre el clima y graficar su evolución
temporal (temperatura mínima, máxima y promedio). Estas tareas pueden
ser fáciles de hacer a mano, pero por la cantidad de trabajo que
involucran son tediosas.&lt;/p&gt;
&lt;p&gt;Lo primero es hacernos con un lenguaje de scripting. Algunas opciones
son &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;,
&lt;a class="reference external" href="http://www.gnu.org/software/bash/"&gt;Bash&lt;/a&gt;,
&lt;a class="reference external" href="http://julialang.org/"&gt;Julia&lt;/a&gt;,
&lt;a class="reference external" href="http://www.mathworks.com/products/matlab/"&gt;Matlab&lt;/a&gt;/&lt;a class="reference external" href="http://www.gnu.org/software/octave/"&gt;Octave&lt;/a&gt;,
&lt;a class="reference external" href="http://www.scilab.org/"&gt;Scilab&lt;/a&gt;. Dejándome llevar por el sesgo,
recomiendo usar Python.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="graficos-y-esquemas"&gt;
&lt;h2&gt;Gráficos y esquemas&lt;/h2&gt;
&lt;p&gt;Una imagen vale más que mil palabras, o eso dice el dicho.
Personalmente, me parece absolutamente cierto y trato de hacer
&lt;em&gt;dibujitos&lt;/em&gt; para poder entender mejor algo o lograrlo explicar mejor.
Lo primero que me gustaría mencionar es la diferencia entre imágenes
de mapas de bits (o ráster) e imágenes vectoriales.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Raster_graphics"&gt;Imagen de mapa de
bits&lt;/a&gt;: es una imagen
que está representada por un arreglo (o rejilla rectangular) de
pixeles. Dicho de otro modo, se almacena la información de color que
hay en cada punto de la imagen. Los formatos más populares almacenan
la información comprimida. Para gráficos con alto contraste (como
esquemas o diagramas) el mejor formato es PNG. Si se tiene una
animación, GIF sería preferible. Y para el caso de fotografías es
mejor utilizar JPG.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Vector_graphics"&gt;Imagen vectorial&lt;/a&gt;:
es una imagen que está formada por entidades geométricas. En esta no
se almacena la información punto a punto sino &lt;em&gt;la construcción&lt;/em&gt; de
las formas que la constituyen. Por esta razón, estas imágenes no se
&lt;em&gt;pixelan&lt;/em&gt; pues la información que se tiene es de cómo construirla.
Este tipo de imágenes es la mejor opciones para esquemas y diagramas,
pues sólo se almacena la información de los trazos y texto que se
añadan en ellas (ver Figura 1). El estándar &lt;em&gt;de facto&lt;/em&gt; para este tipo
de imágenes es PDF —es el que suelo para incluir en mis documentos
\(\LaTeX\), aunque existe forma de embeber SVG en \(\LaTeX\)
pero es algo que aún no exploro—. A pesar de que PDF sea el
&lt;em&gt;estándar&lt;/em&gt;, el formato a preferir es &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Scalable_Vector_Graphics"&gt;SVG (Scalable Vector
Graphics)&lt;/a&gt;
que es un estándar a través de la internet y la mayoría de
navegadores &lt;em&gt;modernos&lt;/em&gt; permiten visualizar.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recapitulando, deberíamos usar imágenes JPG para fotografías y SVG
para esquemas/diagramas. Otro atributo que puede ser de utilidad es el
manejo de capas, SVG permite esto.... y de formatos ráster tenemos la
opción de usar TIFF.&lt;/p&gt;
&lt;p&gt;En cuanto a software para generar/editar este tipo de imágenes debo
decir que existen gran cantidad de programas que permiten exportar a
estos formatos: Python/Matplotlib, Matlab, Inkscape, Adobe
Illustrator, GIMP, Photoshop, LibreOffice. Si el gráfico es generado a
partir de un cálculo o de una serie de datos yo uso Matplotlib. Si en
cambio, queremos hacer un esquema o —como suelo decir— un muñeco mi
herramienta favorita es &lt;a class="reference external" href="http://www.inkscape.org/"&gt;Inkscape.&lt;/a&gt; Este
programa pretende ser una alternativa libre a programas como Adobe
Illustrator —y sí que lo consigue. Obviamente, se podría usar
Illustrator o Corel Draw para esta tarea. Si el único uso sería hacer
esquemas técnico, creo que sería un desperdicio.&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="/images/sensor_hall.png" src="https://nicoguaro.github.io/images/sensor_hall.png"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;strong&gt;Figura 1.&lt;/strong&gt; Esquema de sensado de campo magnético de &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Neodymium_magnet"&gt;imanes
permanentes&lt;/a&gt; por
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Hall_effect"&gt;efecto Hall&lt;/a&gt;. Sacado
de mi &lt;a class="reference external" href="https://goo.gl/G9RRhC"&gt;trabajo de grado&lt;/a&gt; de Ingeniería
Física.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;section id="tomar-notas"&gt;
&lt;h2&gt;Tomar notas&lt;/h2&gt;
&lt;p&gt;Supongo que para algunos parecería un poco trivial hablar de "tomar
notas" y mucho más viniendo de alguien que no tenía cuadernos en el
bachillerato, pero como soy un poco terco creo que igual escribiré un
poco sobre esto. Lo primero que me gustaría mencionar es que recuerdo
que me hablaran de este tema en el colegio, pero nunca hubo nada
formal respecto a desarrollar estas habilidades. Buscando en la web,
hay gran cantidad de información. Incluso el artículo de &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Note-taking"&gt;Wikipedia en
inglés&lt;/a&gt; es interesante.
No hay nada mejor para escribir que tener una pluma y un papel de buen
gramaje, por eso es que aún uso un cuaderno en donde llevo cuenta de
lo que hago en mi investigación y tomo notas. Sin embargo, este
esquema es bastante lineal y deja por fuera oportunidades más
&lt;em&gt;contemporáneas.&lt;/em&gt; Es decir ¿por qué conformarse con un documento en
este tiempo de hiper-documentos? Las ventajas de tomar notas
digitalmente saltan a la vista, en un hiper-documento se pueden tener
enlaces, embeber imágenes, video y sonido.&lt;/p&gt;
&lt;p&gt;En cuanto a herramientas, acá incluyo una pequeña lista:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://evernote.com/"&gt;Evernote&lt;/a&gt; es probablemente la herramienta
más popular para tomar notas. Es multiplataforma, Freemium
(funcionalidad básica gratuita y avanzada paga), y cuenta con muchas
opciones. Yo la uso, pero no mucho en mi investigación.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://zim-wiki.org/"&gt;Zim&lt;/a&gt; es una wiki offline. Tiene gran
cantidad de opciones como calendario, ecuaciones con código
&lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt;, imágenes... en fin. El pero que le encuentro es que no
he logrado configurar las ecuaciones en Windows (y en mi oficina debo
usar Windows :-/).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.docear.org/"&gt;Docear&lt;/a&gt; esta es una herramienta pensada,
principalmente, para manejar bibliografía. Sin embargo, permite tomar
notas y, en general, manejar la información de la investigación. La
característica más (o menos) atractiva es que funciona alrededor de
mapas mentales.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.zotero.org/"&gt;Zotero&lt;/a&gt; también es una herramienta para
manejar bibliografía, aunque permite manejar algo de toma de notas
(al menos alrededor de la bibliografía).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.mendeley.com/"&gt;Mendeley&lt;/a&gt; es muy parecido al anterior,
aunque con más funcionalidades. El pero más grande que le encuentro
es que en 2013 fue comprado por Elsevier.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En cuanto a manejo de bibliografía también me gustaría mencionar
&lt;a class="reference external" href="http://endnote.com/"&gt;EndNote&lt;/a&gt; que es el programa con mayor
trayectoria y  &lt;a class="reference external" href="http://jabref.sourceforge.net/"&gt;JabRef&lt;/a&gt; que es el
que he usado por más tiempo. Algunas referencias interesantes
comparando manejadores de bibliografía están acá:
&lt;a class="reference external" href="https://www.researchgate.net/post/alternative_to_Endnote?_tpcectx=qa_overview_following"&gt;[A]&lt;/a&gt;
&lt;a class="reference external" href="http://www.docear.org/2013/10/14/what-makes-a-bad-reference-manager/"&gt;[B]&lt;/a&gt;
&lt;a class="reference external" href="http://www.docear.org/2014/01/15/comprehensive-comparison-of-reference-managers-mendeley-vs-zotero-vs-docear/"&gt;[C]&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="reconstruccion-de-graficos"&gt;
&lt;h2&gt;Reconstrucción de gráficos&lt;/h2&gt;
&lt;p&gt;Es común encontrarse con información presentada en forma de gráficos.
También es común que queramos tener los datos numéricos de estos
gráficos para poder compararlos con los nuestros. Para saber si
nuestras medidas/simulaciones/métodos dan resultados similares a otros
presentados en la literatura. Para esta tarea se pueden usar potentes
software de procesamiento de imágenes, u otros más modestos diseñados
específicamente para este fin.&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="/images/pointplot.jpg" src="https://nicoguaro.github.io/images/pointplot.jpg"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;strong&gt;Figura 2.&lt;/strong&gt; Gráfico original.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="/images/digitized_pts.png" src="https://nicoguaro.github.io/images/digitized_pts.png"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;strong&gt;Figura 3.&lt;/strong&gt; Gráfico procesado en Engauge Digitizer. Algunos puntos
fueron seleccionados (automáticamente) para obtener sus coordenadas.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://extensions.libreoffice.org/extension-center/digitizer-of-xy-chart"&gt;Digitizer of XY
chart&lt;/a&gt;
este es un plugin para Libreoffice/OpenOffice y exporta el resultado
a la hoja de cálculo actual, es simple y fácil de usar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://digitizer.sourceforge.net/"&gt;Engauge Digitizer&lt;/a&gt;, es el que
normalmente uso cuando necesito hacer esta tarea (ver Figuras XX). Es
de código abierto (y libre) y tiene una buena cantidad de opciones
para facilitar la tarea.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://plotdigitizer.sourceforge.net/"&gt;Plot Digitizer&lt;/a&gt; no tengo
mucha información sobre este (pues nunca lo he usado), salvo que está
escrito en Java.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://imagej.nih.gov/ij/"&gt;ImageJ&lt;/a&gt; este es un (completo) programa
de procesamiento de imágenes que está escrito en Java. No lo he usado
para esta tarea de manera regular, pero podría usarse para ello.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="visualizacion-cientifica"&gt;
&lt;h2&gt;Visualización científica&lt;/h2&gt;
&lt;p&gt;La &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Scientific_visualization"&gt;visualización
científica&lt;/a&gt;
que se encarga de generar gráficos que permitan visualizar "datos
científicos" para facilitar el entendimiento que hay detrás de los
datos. Para esta labor muchos hemos usado lenguajes de scripting como
Matlab/Octave, Scilab o Python (con Matplotlib o Mayavi). Sin embargo,
como la visualización se trata de algo visual —¿como si no?—, es bueno
contar con una herramienta que permita generar y cambiar los gráficos
de manera interactiva, aunque siempre debemos automatizar la mayor
cantidad de trabajo posible (la pereza siempre ha sido uno de los
móviles más grandes de la humanidad, hay que aceptarlo).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://code.enthought.com/projects/mayavi/"&gt;MayaVi&lt;/a&gt;, este es un
programa escrito en Python que usa
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/VTK"&gt;VTK&lt;/a&gt;. Es una herramienta muy
versátil y la gran ventaja que tiene es que puede usarse dentro de
&lt;a class="reference external" href="https://scipy-lectures.github.io/packages/3d_plotting/index.html"&gt;scripts&lt;/a&gt;
de Python.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.paraview.org/"&gt;Paraview&lt;/a&gt;, este programa también está
basado en VTK y permite paralelizar las labores (para los
computadores con múltiple núcleo y los clústers). Abajo incluyo un
video generado en Paraview para mostrar sus capacidades.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://wci.llnl.gov/simulation/computer-codes/visit"&gt;Visit&lt;/a&gt;,
este programa también está basado en VTK, nunca lo he usado pero
quise incluirlo porque la gente dice que puede ser más intuitivo que
Paraview.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.tecplot.com/"&gt;Tecplot,&lt;/a&gt; este programa es muy popular
en Purdue. Creo que inicialmente fue pensado para CFD, pero se ha
expandido mucho. En cuanto a gráficos 3D no me parece mejor que
ParaView, sin embargo, las capacidades de gráficos 2D (gráficos XY, y
demás) lo hacen atractivo.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://jwork.org/scavis/"&gt;Scavis&lt;/a&gt;, este está escrito en Java. No
lo conocía hasta que inicie la escritura de esta entrada pero me
llamó la atención y quise incluirlo en la lista. Algo que me llamó
la atención es que permite scripting en varios lenguajes: Java,
Python, Ruby, BeanShell y Matlab/Octave.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.originlab.com/"&gt;Origin&lt;/a&gt;, nunca lo he usado pero no lo
quise dejar por fuera porque siempre he oído hablar maravillas de él
(probablemente compárandolo con Excel... pero no puedo opinar).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe src="https://player.vimeo.com/video/2016815" width="640" height="483" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;
&lt;/iframe&gt;
&lt;p&gt;
    &lt;ahref&gt;Simulación de fuego cruzado en &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.
&lt;/ahref&gt;&lt;/p&gt;&lt;/section&gt;
&lt;section id="manejo-de-versiones"&gt;
&lt;h2&gt;Manejo de versiones&lt;/h2&gt;
&lt;p&gt;El &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Revision_control"&gt;manejo de
versiones&lt;/a&gt; es la
administración de cambios en documentos, código fuente y otro tipo de
información. Esto puede hacerse de forma manual, pero es fácil cometer
errores o remplazar la versión de un código fácilmente, y por esto es
recomendable usar un software que facilite el trabajo. La idea es
tener un &lt;em&gt;lugar&lt;/em&gt; (repositorio) en donde se almacenan las versiones y
los cambios, y llevar un registro de estos. De esta forma se puede
volver a una versión anterior de los documentos y varias personas
pueden trabajar conjuntamente.  Existen dos paradigmas (o
arquitecturas) para el manejo de versiones: centralizada y
distribuida. En la primera existe un repositorio centralizado en donde
se encuentra toda la información. En la arquitectura distribuida cada
usuario tiene una copia del respositorio. Personalmente sólo he usado
&lt;a class="reference external" href="http://git-scm.com/"&gt;Git&lt;/a&gt;, que entra en la categoría distribuida y
es uno de los software de manejo de versiones más populares
actualmente; lo usan compañías como Google, Facebook y Netflix.&lt;/p&gt;
&lt;p&gt;Un ejemplo puede verse en este
&lt;a class="reference external" href="https://github.com/bebopsan/SEC-Thesis"&gt;repositorio&lt;/a&gt;, en donde
está el documento de trabajo de grado de Santiago Echeverri, el cual
tuve la oportunidad de asesorar. Este documento lo editamos
conjuntamente mientras él estaba en Medellín  y yo me encontraba en
Estados Unidos. El documento se hizo en el lenguaje de marcadores
&lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Además de tener un control sobre las versiones y poder acceder a
versiones anteriores, es útil poder almacenar la información en un
lugar accesible desde cualquier lugar del mundo con una conexión a
internet. Esto puede lograrse con un servidor propio, obviamente, o
también a través de un proveedor externo. Dos proyectos que  son muy
populares para alojar repositorios y manejar sus versiones son
(&lt;a class="reference external" href="http://www.infoworld.com/d/application-development/bitbucket-vs-github-which-project-host-has-the-most-227061"&gt;comparación entre Github y
BitBucket&lt;/a&gt;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/"&gt;Github&lt;/a&gt;  es el más popular en este momento.
Permite tener proyectos con un número ilimitado de colaboradores.
Para tener un repositorio privado es necesario pagar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://bitbucket.org/"&gt;BitBucket&lt;/a&gt; tiene como principal ventaja que
permite tener repositorios privados sin la necesidad de pagar. Sólo
es gratuito para proyectos con 5 colaboradores o menos (o para
proyectos &lt;a class="reference external" href="https://bitbucket.org/account/user/nicoguaro/plans/"&gt;académicos&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="enlaces-sugeridos"&gt;
&lt;h2&gt;Enlaces sugeridos&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Software Carpentry. &lt;a class="reference external" href="http://software-carpentry.org/"&gt;http://software-carpentry.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python Scientific Lecture Notes. &lt;a class="reference external" href="https://scipy-lectures.github.io/"&gt;https://scipy-lectures.github.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Seguro dejé mucho temas por fuera así como herramientas dentro de
algún tópico. Si ese es el caso, agradecería que me lo digan en los
comentarios.&lt;/p&gt;
&lt;/section&gt;</description><category>blog viejo</category><category>investigación</category><category>tomar notas</category><category>visualización científica</category><guid>https://nicoguaro.github.io/es/posts/herramientas-investigacion/</guid><pubDate>Sat, 12 Jul 2014 09:24:00 GMT</pubDate></item></channel></rss>