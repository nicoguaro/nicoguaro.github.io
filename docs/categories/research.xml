<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nicolás' blog (Posts about research)</title><link>https://nicoguaro.github.io/</link><description></description><atom:link href="https://nicoguaro.github.io/categories/research.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:nicoguarin@gmail.com"&gt;Nicolás Guarín-Zapata&lt;/a&gt; 
&lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;
&lt;img alt="Creative Commons License"
style="border-width:0"
src="https://i.creativecommons.org/l/by/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Fri, 18 Jun 2021 17:13:49 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Technical writing: using math</title><link>https://nicoguaro.github.io/posts/tech_writing_math/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;div&gt;&lt;p&gt;In a &lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing"&gt;previous post&lt;/a&gt; I mentioned some general aspects of
technical writing. In this one, I would like to talk about including
mathematical expressions in technical documents.&lt;/p&gt;
&lt;p&gt;There are two main ways to include math in your documents:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;using text; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;using a graphic interface.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using a graphic interface, such as the equation editor in
LibreOffice Writer or MS Word, or
&lt;a class="reference external" href="http://www.dessci.com/en/products/mathtype/"&gt;MathType&lt;/a&gt; is convenient.
You don't need to memorize anything and you can look at your expressions
while creating them. Nevertheless, it can be slow compared to using text
input — once you are comfortable with the syntax.&lt;/p&gt;
&lt;p&gt;There are two main flavors of equations used over the internet:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/MathML"&gt;MathML&lt;/a&gt; is a
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/World_Wide_Web_Consortium"&gt;W3C standard&lt;/a&gt;
for equations and it is included in HTML5, so it would work in all
modern browsers. The problem with it is that it is not designed to be
written by hand. So one can use it if have some automatic way of generating
the code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.overleaf.com/learn/latex/Mathematical_expressions"&gt;LaTeX&lt;/a&gt;
is my suggested way to write equations. The learning curve might be a
little bit steep at the beginning but it pays off.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One tool that helps with equations is &lt;a class="reference external" href="https://mathpix.com/"&gt;MathPix Snip&lt;/a&gt;
that automatically generates LaTeX or MathML code from an image, even a
handwritten one. Another tool that is really useful is
&lt;a class="reference external" href="http://detexify.kirelabs.org/classify.html"&gt;Detexify&lt;/a&gt; that let you
draw a symbol and gives you the LaTeX syntax for it.&lt;/p&gt;
&lt;p&gt;In the remaining of the posts I will show my suggestions for working
with equations in LibreOffice and MS Word. If you are using LaTeX or
MarkDown/ReStructuredText for your documents you are already using
LaTeX for your equations.&lt;/p&gt;
&lt;div class="section" id="libreoffice"&gt;
&lt;h2&gt;LibreOffice&lt;/h2&gt;
&lt;p&gt;LibreOffice has its own math editor with its own syntax and it works
fine for small expressions, but it gets complicated for large equations or
long algebraic manipulations. For LibreOffice I would suggest to use
&lt;a class="reference external" href="http://roland65.free.fr/texmaths/install.html"&gt;TexMaths&lt;/a&gt;, it is simple to
use and works for the word processor (Writer) and presentations (Impress).
I suppose it also works for spreadsheets (Calc), but I don't remember
using equations in one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ms-office"&gt;
&lt;h2&gt;MS Office&lt;/h2&gt;
&lt;p&gt;MS Office has its own math editor as well, it works fine and is easy to use.
Nevertheless, the same problem appears when you want long expressions.
One option is to directly use
&lt;a class="reference external" href="https://docs.microsoft.com/en-us/archive/blogs/murrays/latex-math-in-office"&gt;LaTeX in Office&lt;/a&gt;
but I prefer to use &lt;a class="reference external" href="http://www.jonathanleroux.org/software/iguanatex/download.html"&gt;IguanaTex&lt;/a&gt;.
It is a complement that allows to input equations similarly to TexMaths in
LibreOffice.&lt;/p&gt;
&lt;p&gt;You could also directly paste MathML equations into MS Word (&amp;gt;2013 and Windows).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="use-a-sympy"&gt;
&lt;h2&gt;Use a SymPy&lt;/h2&gt;
&lt;p&gt;Indepent of the tool that you use to write your documents I strongly suggest
to use a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Computer_algebra_system"&gt;CAS&lt;/a&gt;
(Computer Algebra System), such as Mathematica or SymPy. These programs
have automatic generation of LaTeX and MathML from expression and that can
ease the process a lot.&lt;/p&gt;
&lt;p&gt;Let's check an example. Suppose that we have the function&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
f(x) = \exp(-x^2) \sin(3*x)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;and we want to compute its second derivative&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
f''(x) = \left(- 12 x \cos{\left(3 x \right)} + 2 \left(2 x^{2} - 1\right) \sin{\left(3 x \right)} - 9 \sin{\left(3 x \right)}\right) e^{- x^{2}}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;The following code gives us the LaTex code&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_fbc065be302449a4a2ece1c2e2888b32-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sympy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;a name="rest_code_fbc065be302449a4a2ece1c2e2888b32-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;init_session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_fbc065be302449a4a2ece1c2e2888b32-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_fbc065be302449a4a2ece1c2e2888b32-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;fxx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_fbc065be302449a4a2ece1c2e2888b32-5"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fxx&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;that is&lt;/p&gt;
&lt;pre class="code latex"&gt;&lt;a name="rest_code_a98faf2fef6f40ab8e8293210bb62e0b-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(- 12 x &lt;span class="k"&gt;\cos&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt; + 2 &lt;span class="k"&gt;\left&lt;/span&gt;(2 x&lt;span class="nb"&gt;^{&lt;/span&gt;2&lt;span class="nb"&gt;}&lt;/span&gt; - 1&lt;span class="k"&gt;\right&lt;/span&gt;) &lt;span class="k"&gt;\sin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt; - 9 &lt;span class="k"&gt;\sin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt;&lt;span class="k"&gt;\right&lt;/span&gt;) e&lt;span class="nb"&gt;^{&lt;/span&gt;- x&lt;span class="nb"&gt;^{&lt;/span&gt;2&lt;span class="nb"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;That corresponds to the code that I used above to render the equation&lt;/p&gt;
&lt;p&gt;If, we wanted the MathML code of that expression we could use
the following snippet&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_20c3e2e06b00440f85e3dd3731300ef1-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sympy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;a name="rest_code_20c3e2e06b00440f85e3dd3731300ef1-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;init_session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_20c3e2e06b00440f85e3dd3731300ef1-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_20c3e2e06b00440f85e3dd3731300ef1-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;fxx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_20c3e2e06b00440f85e3dd3731300ef1-5"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mathml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fxx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;printer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"presentation"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;notice the extra argument &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;printer="presentation"&lt;/span&gt;&lt;/code&gt;. If we want to add
this to MS Word, for example, we could add the output (that I will not
show because is really long) inside the following&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_60da72735a934a9586a90093d50d4330-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;math&lt;/span&gt; &lt;span class="na"&gt;xmlns =&lt;/span&gt; &lt;span class="s"&gt;"http://www.w3.org/1998/Math/MathML"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_60da72735a934a9586a90093d50d4330-2"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;/math&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;When using Jupyter Notebook this can be done graphically with a
right click over the expression. Then, the following menu is
shown&lt;/p&gt;
&lt;img alt="/images/jupyter_export_eqs.png" src="https://nicoguaro.github.io/images/jupyter_export_eqs.png"&gt;
&lt;/div&gt;
&lt;div class="section" id="references"&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;“How to Insert Equations in Microsoft Word.” WikiHow,
&lt;a class="reference external" href="https://www.wikihow.com/Insert-Equations-in-Microsoft-Word"&gt;https://www.wikihow.com/Insert-Equations-in-Microsoft-Word&lt;/a&gt;.
Accessed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“Copy MathML into Word to Use as Equation.” Stack Overflow,
&lt;a class="reference external" href="https://stackoverflow.com/questions/25430775/copy-mathml-into-word-to-use-as-equation"&gt;https://stackoverflow.com/questions/25430775/copy-mathml-into-word-to-use-as-equation&lt;/a&gt;.
Accessed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“Python - Output Sympy Equation to Word Using Mathml.” Stack Overflow,
&lt;a class="reference external" href="https://stackoverflow.com/questions/40921128/output-sympy-equation-to-word-using-mathml"&gt;https://stackoverflow.com/questions/40921128/output-sympy-equation-to-word-using-mathml&lt;/a&gt;.
Accessed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OERPUB (2016), “Mathconverter”, &lt;a class="reference external" href="https://github.com/oerpub/mathconverter"&gt;https://github.com/oerpub/mathconverter&lt;/a&gt;,
Accesed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>latex</category><category>libreoffice</category><category>math</category><category>ms-word</category><category>research</category><category>typography</category><category>writing</category><guid>https://nicoguaro.github.io/posts/tech_writing_math/</guid><pubDate>Sun, 02 Aug 2020 23:00:00 GMT</pubDate></item><item><title>Technical writing</title><link>https://nicoguaro.github.io/posts/tech_writing/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;div&gt;&lt;p&gt;This is the first post about technical writing &lt;a class="footnote-reference brackets" href="https://nicoguaro.github.io/posts/tech_writing/#id2" id="id1"&gt;*&lt;/a&gt; from a series that
I will be creating during the course of this year. Technical writing is
something that most of us have to deal with in different contexts. For
example, in college coursework, research publications, software documentation.
The main idea of the series is to mention some of the tricks that I have
learned over the years and some tools that might come in handy.&lt;/p&gt;
&lt;p&gt;Future posts will (probably) be about:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing_math"&gt;Using equations&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using figures;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using tables; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Managing bibliographic references.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="the-current-post"&gt;
&lt;h2&gt;The current post&lt;/h2&gt;
&lt;p&gt;As mentioned above, technical writing is something that a lot of persons
have to deal with. This is a skill that is sometimes overlooked,
but it should not. According to the
&lt;a class="reference external" href="https://www.bls.gov/ooh/media-and-communication/technical-writers.htm"&gt;U.S. Bureau of Labor Statistics&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Technical writers prepare instruction manuals, how-to guides,
journal articles, and other supporting documents to communicate complex and
technical information more easily.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And it is a desired skill in the workplace. Its demand is expected to grow
around 10% in the current decade.&lt;/p&gt;
&lt;div class="section" id="typography"&gt;
&lt;h3&gt;Typography&lt;/h3&gt;
&lt;p&gt;The first thing that I should mention is that writing documents is
typography. "Putting documents" together is typography because
we are &lt;em&gt;designing with text&lt;/em&gt; (Butterick, 2019). So, we should consider
ourselves typographers since we are constantly designing documents.&lt;/p&gt;
&lt;p&gt;I would suggest taking a look at "Butterick's Practical Typography"
since it is a really good book about it and it reads smoothly. I will
mention some important points here according to Butterick's
"Typography in ten minutes":&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;The most important typographic selection is on the body text.
This is due to the fact that it is most of the document.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose a point size between 10-12 points for printed documents
and 15-25 pixels for digital documents.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Line spacing should be between 120-145 % of the point size.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Line length should be between 45-90 characters. This is roughly
2 or 3 small caps alphabets:&lt;/p&gt;
&lt;p&gt;abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mind the selection of your font. Try to avoid default fonts such as
Arial, Calibri or Times New Roman.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="editors"&gt;
&lt;h3&gt;Editors&lt;/h3&gt;
&lt;p&gt;Another point that I want to touch in this post is about editors. The first
question that arises is "what editor should I use?". The short answer is:
&lt;strong&gt;use whatever your peers are using&lt;/strong&gt;. That's my best advice; that way you
have people to discuss with you about your doubts.&lt;/p&gt;
&lt;p&gt;The long answer … is that each editor has its weak and strong points. I
have written scientific papers in LaTeX, LibreOffice Writer and MS Word;
all of them look professional. So, in the end, you can write your
documents in several ways and achieve a similar result. I prefer to use
LaTeX for long documents since it is centered in the structure of the
document instead of the appearance and this is the way one should manage
a long document like a dissertation, in my opinion.&lt;/p&gt;
&lt;p&gt;If you just want me to pick one editor and suggest it to you, I would
say that you should ride with &lt;a class="reference external" href="https://www.libreoffice.org/"&gt;LibreOffice&lt;/a&gt;.
A good reference for it is "Designing with LibreOffice". Once you learn
how to use styles you will ask how have you been writing documents all
this time.&lt;/p&gt;
&lt;p&gt;There are two main flavors for editors that I am going to discuss:
WYSIWYG (What You See Is What You Get) and markup-based editors.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;WYSIWYG. This category is the one that most people is familiar with.
Two examples are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;LibreOffice writer; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microsoft Word.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Markup-based editors rely on marks on the "text" to differentiate
sections and styles. In this case, your text looks like code, as seen
in the following image&lt;/p&gt;
&lt;img alt="/images/rst_code.png" src="https://nicoguaro.github.io/images/rst_code.png"&gt;
&lt;p&gt;Some examples are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;LaTeX;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.markdownguide.org/getting-started"&gt;Markdown&lt;/a&gt;; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docutils.sourceforge.io/rst.html"&gt;reStructuredtext&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Independently of what your main editor is I suggest that you use
&lt;a class="reference external" href="https://pandoc.org/"&gt;Pandoc&lt;/a&gt;. It allows you to convert between several
formats, making the process a little bit easier. There is even an editor
based completely on it named &lt;a class="reference external" href="https://panwriter.com/"&gt;Panwriter&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Matthew Butterick (2019). &lt;a class="reference external" href="https://practicaltypography.com/"&gt;Butterick's Practical Typography&lt;/a&gt;.
Second edition, Matthew Butterick.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wikibooks contributors. (2020). &lt;a class="reference external" href="https://en.wikibooks.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt;.
Wikibooks, The Free Textbook Project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bruce Byfield (2016). &lt;a class="reference external" href="https://designingwithlibreoffice.com/"&gt;Designing with LibreOffice&lt;/a&gt;.
Friends of OpenDocument, Inc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deville, S. (2015).
&lt;a class="reference external" href="https://sylvaindeville.net/2015/07/17/writing-academic-papers-in-plain-text-with-markdown-and-jupyter-notebook/"&gt;Writing academic papers in plain text with Markdown and Jupyter notebook&lt;/a&gt;.
Sylvain Deville.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Eric Holscher (2016).
&lt;a class="reference external" href="https://www.ericholscher.com/blog/2016/jul/1/sphinx-and-rtd-for-writers/"&gt;An introduction to Sphinx and Read the Docs for Technical Writers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;dl class="footnote brackets"&gt;
&lt;dt class="label" id="id2"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://nicoguaro.github.io/posts/tech_writing/#id1"&gt;*&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;This post is (somewhat) related to a
&lt;a class="reference external" href="https://nicoguaro.github.io/posts/herramientas-investigacion/"&gt;previous post&lt;/a&gt;
where I discussed research tools that most of us need but are not
commonly taught in a formal fashion.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>latex</category><category>libreoffice</category><category>research</category><category>typography</category><category>writing</category><guid>https://nicoguaro.github.io/posts/tech_writing/</guid><pubDate>Thu, 28 May 2020 20:53:40 GMT</pubDate></item><item><title>(Auxiliary) Tools for research</title><link>https://nicoguaro.github.io/posts/herramientas-investigacion/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;div&gt;&lt;p&gt;In this post I want to talk about some tools (or something like that)
that are useful in the day-to-day research, but usually not so popular
for being somewhat &lt;em&gt;tangential&lt;/em&gt; to the area specific in which each one works.&lt;/p&gt;
&lt;div class="section" id="scripting"&gt;
&lt;h2&gt;Scripting&lt;/h2&gt;
&lt;p&gt;A &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Scripting_language"&gt;script&lt;/a&gt; is a
&lt;em&gt;usually&lt;/em&gt; simple program that performs a series of tasks.
If there is a task that must be done more than ... five times (the number varies
according to the patience), then I think it's something we can ask the
computer to do for us. In other words: we can automate that work. Some tasks
that can be a good alternative to automate are: rename 100 files,
convert a file from one format to another (e.g. STL to OBJ), read
387 files with information on the climate and graph its evolution
temporary (minimum, maximum and average temperature). These tasks can
be easy to do by hand, but for the amount of work that
they involve are tedious.&lt;/p&gt;
&lt;p&gt;The first thing to do is to get a scripting language. Some options are
&lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;,
&lt;a class="reference external" href="http://www.gnu.org/software/bash/"&gt;Bash&lt;/a&gt;,
&lt;a class="reference external" href="http://julialang.org/"&gt;Julia&lt;/a&gt;,
&lt;a class="reference external" href="http://www.mathworks.com/products/matlab/"&gt;Matlab&lt;/a&gt;/&lt;a class="reference external" href="http://www.gnu.org/software/octave/"&gt;Octave&lt;/a&gt;,
&lt;a class="reference external" href="http://www.scilab.org/"&gt;Scilab&lt;/a&gt;. Allowing myself to follow my bias,
I would recommend to use Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="graphics-and-schematics"&gt;
&lt;h2&gt;Graphics and schematics&lt;/h2&gt;
&lt;p&gt;A picture is worth a thousand words, or so the saying goes.
Personally, it seems absolutely true to me and I try to do
&lt;em&gt;scribbles&lt;/em&gt; to better understand something or explain it better.
The first thing I would like to mention is the difference between images
bitmap (or raster) and vector images.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Raster_graphics"&gt;Bitmap image&lt;/a&gt;: it's an image
which is represented by an array (or rectangular grid) of pixels. In other
words, the color information that there are in each point of the image. The
most popular formats store the compressed information. For high contrast
graphics (such as schematics or diagrams) the best format is PNG. If you have
an animation, GIF would be preferable. And in the case of photographs it is
better to use JPG.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Vector_graphics"&gt;Vector image&lt;/a&gt;:
is an image that is made up of geometric entities. In this case, the
stored information is not point-to-point but &lt;em&gt;the construction&lt;/em&gt; of
the shapes that constitute it. For this reason, these images don't
&lt;em&gt;pixelate&lt;/em&gt; because the information you have is how to build it.
This type of images is the best options for schematics and diagrams,
since the only stored information are the strokes and text added to
them (see Figure 1). The &lt;em&gt;de facto&lt;/em&gt; standard for this type
of images is PDF —it is the one I usually include in my documents
\(\LaTeX\), although there is a way to embed SVG in \(\LaTeX\)
But it's something I haven't yet explored. Although PDF is the
&lt;em&gt;standard&lt;/em&gt;, the preferred format is &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Scalable_Vector_Graphics"&gt;SVG (Scalable Vector
Graphics)&lt;/a&gt;
which is a standard across the internet and most
&lt;em&gt;modern&lt;/em&gt; browsers allow viewing.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recapping, we should use JPG images for photographs and SVG
for schematics/diagrams. Another attribute that may be useful is the
Layer management, SVG allows this ... and for raster formats we have the
option to use TIFF.&lt;/p&gt;
&lt;p&gt;Regarding software to generate/edit this type of images I must
say that there are a large number of programs that allow exporting to
these formats: Python/Matplotlib, Matlab, Inkscape, Adobe
Illustrator, GIMP, Photoshop, LibreOffice. If the graph is generated
from a calculation or a data series I use Matplotlib. If
instead, we want to make a schematic or my tool of choice
is &lt;a class="reference external" href="http://www.inkscape.org/"&gt;Inkscape.&lt;/a&gt; This
program is intended to be a free alternative to programs like Adobe
Illustrator —and it does achieve it. Obviously, you could use
Illustrator or Corel Draw for this task. If the only use would be to make
Technical schematics, I think it would be a waste.&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 100%"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="/images/sensor_hall.png" src="https://nicoguaro.github.io/images/sensor_hall.png"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;strong&gt;Figure 1.&lt;/strong&gt; Schematic for magnetic field sensing for &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Neodymium_magnet"&gt;permanent
magnets&lt;/a&gt; using
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Hall_effect"&gt;Hall effect&lt;/a&gt;. From
my Engineering Physics &lt;a class="reference external" href="https://goo.gl/G9RRhC"&gt;thesis&lt;/a&gt; .&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="taking-notes"&gt;
&lt;h2&gt;Taking notes&lt;/h2&gt;
&lt;p&gt;I suppose that to some it would seem a bit trivial to speak of "notetaking"
and much more coming from someone who didn't have notebooks in
high school, but since I'm a bit stubborn I think I'll still write a
little about this. The first thing I would like to mention is that I remember
people talking to me about this at school, but there was never anything
formal regarding developing these skills. Surfing the web,
there is a lot of information. Even the &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Note-taking"&gt;Wikipedia article on
English&lt;/a&gt; is interesting.
There is nothing better to write than to have a good pen and paper with a good
grammage, that's why I still use a notebook where I keep track of
what I do in my research and take notes. However, this scheme is quite linear
and leaves out more &lt;em&gt;contemporary&lt;/em&gt; options. That is, why settle for a document
in this time of hyper-documents? The advantages of taking notes
digitally jump to the eye, in a hyper-document you can have
links, embed images, video and sound.&lt;/p&gt;
&lt;p&gt;Regarding tools, I include a short list here:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://evernote.com/"&gt;Evernote&lt;/a&gt; is probably the most popular tool
for taking notes. It's cross-platform, Freemium  (free basic and paid
advanced functionality), and has many options. I use it, but not much in my
research.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://zim-wiki.org/"&gt;Zim&lt;/a&gt; it is an offline wiki. Has great
number of options like calendar, equations with &lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt;, images ...
anyway. The but that I find is that no I have managed to configure the
equations in Windows (and in my office I must use Windows :-/).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.docear.org/"&gt;Docear&lt;/a&gt; this is a tool thought,
mainly, to handle bibliography. However, it allows to take
notes and, in general, handle the information of the investigation. The
more (or less) appealing feature is that it works around
mental maps.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.zotero.org/"&gt;Zotero&lt;/a&gt; It is also a tool to handle bibliography,
although it allows to handle some note taking (at least around the
bibliography).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.mendeley.com/"&gt;Mendeley&lt;/a&gt; it is very similar to the previous one,
although with more functionalities. The biggest but that I find it
is that in 2013 it was bought by Elsevier.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regarding bibliography management I would also like to mention
&lt;a class="reference external" href="http://endnote.com/"&gt;EndNote&lt;/a&gt; which is the program with the longest
trajectory and &lt;a class="reference external" href="http://jabref.sourceforge.net/"&gt;JabRef&lt;/a&gt; which is the one
that I have used the longest. Some interesting references
comparing bibliography handlers are::
&lt;a class="reference external" href="https://www.researchgate.net/post/alternative_to_Endnote?_tpcectx=qa_overview_following"&gt;[A]&lt;/a&gt;
&lt;a class="reference external" href="http://www.docear.org/2013/10/14/what-makes-a-bad-reference-manager/"&gt;[B]&lt;/a&gt;
&lt;a class="reference external" href="http://www.docear.org/2014/01/15/comprehensive-comparison-of-reference-managers-mendeley-vs-zotero-vs-docear/"&gt;[C]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="graphic-reconstruction"&gt;
&lt;h2&gt;Graphic reconstruction&lt;/h2&gt;
&lt;p&gt;It is common to find information presented in the form of graphics.
It is also common that we want to have the numerical data of these
graphs to be able to compare them with ours. To know if
our measurements/simulations/methods give results similar to others
presented in the literature. We could use powerful image processing software,
or other more modest ones designed specifically for this purpose.&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 100%"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="/images/pointplot.jpg" src="https://nicoguaro.github.io/images/pointplot.jpg"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;strong&gt;Figure 2.&lt;/strong&gt; Original graphic.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 100%"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="/images/digitized_pts.png" src="https://nicoguaro.github.io/images/digitized_pts.png"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;strong&gt;Figure 3.&lt;/strong&gt; Graphic processed in Engauge Digitizer. Some points were
selected (automatically) to obtain their coordinates.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://extensions.libreoffice.org/extension-center/digitizer-of-xy-chart"&gt;Digitizer of XY chart&lt;/a&gt;
this is a plugin for Libreoffice/OpenOffice and it exports the result
to the current spreadsheet, it is simple and easy to use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://digitizer.sourceforge.net/"&gt;Engauge Digitizer&lt;/a&gt;, is the one
I normally use when I need to do this task (see Figures above). It is
open source (and free) and has a fair amount of options
to make the task easier.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://plotdigitizer.sourceforge.net/"&gt;Plot Digitizer&lt;/a&gt; I don't have
a lot of information about this one (since I have never used it), except that
it is written in Java.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://imagej.nih.gov/ij/"&gt;ImageJ&lt;/a&gt; this is a (complete) program for
image processing that is written in Java. I have not used it
for this task on a regular basis, but could be used for it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="scientific-visualization"&gt;
&lt;h2&gt;Scientific visualization&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Scientific_visualization"&gt;Scientific visualization&lt;/a&gt;
is in charge of generating graphs that allow visualizing "scientific data"
to facilitate the understanding behind the data. For this work, many of us have
used scripting languages such as Matlab/Octave, Scilab or Python (with
Matplotlib or Mayavi). However, as visualization is about something visual
—what else?—, it is good have a tool that allows you to generate and change
graphics interactively, although we must always automate as much
amount of work possible (laziness has always been one of the largest mobiles of
humanity, you have to accept it).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://code.enthought.com/projects/mayavi/"&gt;MayaVi&lt;/a&gt;, this is a
program written in Python that uses &lt;a class="reference external" href="http://en.wikipedia.org/wiki/VTK"&gt;VTK&lt;/a&gt;. It is very versatile and the great
advantage it has is that it can be used within Python
&lt;a class="reference external" href="https://scipy-lectures.github.io/packages/3d_plotting/index.html"&gt;scripts&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.paraview.org/"&gt;Paraview&lt;/a&gt;, this program is also
based on VTK and allows to parallelize the work (for
multi-core computers and clusters). Below I include a
video generated in Paraview to show its capabilities.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://wci.llnl.gov/simulation/computer-codes/visit"&gt;Visit&lt;/a&gt;,
this program is also VTK based, I have never used it but
I wanted to include it because people say it can be more intuitive than
Paraview.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.tecplot.com/"&gt;Tecplot,&lt;/a&gt; this program is very popular
at Purdue. I think it was initially intended for CFD, but it has been
much expanded. Regarding 3D graphics, it does not seem better than
ParaView, however, the 2D graphics capabilities (XY graphics, and
others) make it attractive.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://jwork.org/scavis/"&gt;Scavis&lt;/a&gt;, this is written in Java. I didn't
know it until I started writing this post but it caught my eye and I wante
to put it on the list. Something that cught my attention is that it allows
scripting in several languages: Java, Python, Ruby, BeanShell, and
Matlab/Octave.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.originlab.com/"&gt;Origin&lt;/a&gt;, I have never used it but I didn't
want to leave it out because I've always heard great things about it
(probably comparing it with Excel ... but I can't comment).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe src="https://player.vimeo.com/video/2016815" width="640" height="483" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;
&lt;/iframe&gt;
&lt;p&gt;
    &lt;ahref&gt;
    Cross fire simulation
    &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.
&lt;/ahref&gt;&lt;/p&gt;&lt;/div&gt;
&lt;div class="section" id="version-control"&gt;
&lt;h2&gt;Version control&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Version_control"&gt;Version control&lt;/a&gt; is the
management of changes in documents, source code and other types of
information. This can be done manually, but it is easy to make mistakes
or replace the version of a code easily, and for this it is
advisable to use software that facilitates the work. The idea is to
have a &lt;em&gt;place&lt;/em&gt; (repository) where versions and changes are stored, and keep
track of them. In this way you can revert to a previous version of documents
and multiple people can work together. There are two paradigms (or
architectures) for version control: centralized and distributed. In the first
there is a centralized repository where you find all the information. In
distributed architectures each user has a copy of the repository. Personally I
have only used &lt;a class="reference external" href="http://git-scm.com/"&gt;Git&lt;/a&gt;, which falls under the distributed
category and is one of the most popular version contorl software
at the moment; it is used by companies like Google, Facebook and Netflix.&lt;/p&gt;
&lt;p&gt;An example can be seen in this
&lt;a class="reference external" href="https://github.com/bebopsan/SEC-Thesis"&gt;repository&lt;/a&gt;, with the
undergrad thesis document of Santiago Echeverri, which
I had the opportunity to advise. We edited this document
together while he was in Medellin and I was in
USA. The document was made in the markup language
&lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;In addition to having control over the versions and being able to access
previous versions, it is useful to be able to store the information in a
accesible location from anywhere in the world with a connection to
Internet. This can be achieved with your own server, obviously, or
also through an external provider. Two projects that are very
popular for hosting repositories are
(&lt;a class="reference external" href="http://www.infoworld.com/d/application-development/bitbucket-vs-github-which-project-host-has-the-most-227061"&gt;comparison between Github and
BitBucket&lt;/a&gt;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/"&gt;Github&lt;/a&gt; is the most popular at the moment.
It allows to have projects with an unlimited number of collaborators.
To have a private repository it is necessary to pay.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://bitbucket.org/"&gt;BitBucket&lt;/a&gt; has the main advantage that
allows you to have private repositories without the need to pay. It is only
free for projects with 5 or fewer collaborators (or for
&lt;a class="reference external" href="https://bitbucket.org/account/user/nicoguaro/plans/"&gt;academic projects&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="suggested-links"&gt;
&lt;h2&gt;Suggested links&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Software Carpentry. &lt;a class="reference external" href="http://software-carpentry.org/"&gt;http://software-carpentry.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python Scientific Lecture Notes. &lt;a class="reference external" href="https://scipy-lectures.github.io/"&gt;https://scipy-lectures.github.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Surely I left a lot of topics outside as well as tools within a topic. If that's
the case, I would appreciate if you tell me in the comments.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>note taking</category><category>old blog</category><category>research</category><category>scientific visualization</category><guid>https://nicoguaro.github.io/posts/herramientas-investigacion/</guid><pubDate>Sat, 12 Jul 2014 09:24:00 GMT</pubDate></item></channel></rss>