<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nicolás' blog (Posts about note taking)</title><link>https://nicoguaro.github.io/</link><description></description><atom:link href="https://nicoguaro.github.io/categories/note-taking.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2022 &lt;a href="mailto:nicoguarin@gmail.com"&gt;Nicolás Guarín-Zapata&lt;/a&gt; 
&lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;
&lt;img alt="Creative Commons License"
style="border-width:0"
src="https://i.creativecommons.org/l/by/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Fri, 06 May 2022 17:24:16 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>(Auxiliary) Tools for research</title><link>https://nicoguaro.github.io/posts/herramientas-investigacion/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;In this post I want to talk about some tools (or something like that)
that are useful in the day-to-day research, but usually not so popular
for being somewhat &lt;em&gt;tangential&lt;/em&gt; to the area specific in which each one works.&lt;/p&gt;
&lt;div class="section" id="scripting"&gt;
&lt;h2&gt;Scripting&lt;/h2&gt;
&lt;p&gt;A &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Scripting_language"&gt;script&lt;/a&gt; is a
&lt;em&gt;usually&lt;/em&gt; simple program that performs a series of tasks.
If there is a task that must be done more than ... five times (the number varies
according to the patience), then I think it's something we can ask the
computer to do for us. In other words: we can automate that work. Some tasks
that can be a good alternative to automate are: rename 100 files,
convert a file from one format to another (e.g. STL to OBJ), read
387 files with information on the climate and graph its evolution
temporary (minimum, maximum and average temperature). These tasks can
be easy to do by hand, but for the amount of work that
they involve are tedious.&lt;/p&gt;
&lt;p&gt;The first thing to do is to get a scripting language. Some options are
&lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;,
&lt;a class="reference external" href="http://www.gnu.org/software/bash/"&gt;Bash&lt;/a&gt;,
&lt;a class="reference external" href="http://julialang.org/"&gt;Julia&lt;/a&gt;,
&lt;a class="reference external" href="http://www.mathworks.com/products/matlab/"&gt;Matlab&lt;/a&gt;/&lt;a class="reference external" href="http://www.gnu.org/software/octave/"&gt;Octave&lt;/a&gt;,
&lt;a class="reference external" href="http://www.scilab.org/"&gt;Scilab&lt;/a&gt;. Allowing myself to follow my bias,
I would recommend to use Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="graphics-and-schematics"&gt;
&lt;h2&gt;Graphics and schematics&lt;/h2&gt;
&lt;p&gt;A picture is worth a thousand words, or so the saying goes.
Personally, it seems absolutely true to me and I try to do
&lt;em&gt;scribbles&lt;/em&gt; to better understand something or explain it better.
The first thing I would like to mention is the difference between images
bitmap (or raster) and vector images.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Raster_graphics"&gt;Bitmap image&lt;/a&gt;: it's an image
which is represented by an array (or rectangular grid) of pixels. In other
words, the color information that there are in each point of the image. The
most popular formats store the compressed information. For high contrast
graphics (such as schematics or diagrams) the best format is PNG. If you have
an animation, GIF would be preferable. And in the case of photographs it is
better to use JPG.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Vector_graphics"&gt;Vector image&lt;/a&gt;:
is an image that is made up of geometric entities. In this case, the
stored information is not point-to-point but &lt;em&gt;the construction&lt;/em&gt; of
the shapes that constitute it. For this reason, these images don't
&lt;em&gt;pixelate&lt;/em&gt; because the information you have is how to build it.
This type of images is the best options for schematics and diagrams,
since the only stored information are the strokes and text added to
them (see Figure 1). The &lt;em&gt;de facto&lt;/em&gt; standard for this type
of images is PDF —it is the one I usually include in my documents
\(\LaTeX\), although there is a way to embed SVG in \(\LaTeX\)
But it's something I haven't yet explored. Although PDF is the
&lt;em&gt;standard&lt;/em&gt;, the preferred format is &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Scalable_Vector_Graphics"&gt;SVG (Scalable Vector
Graphics)&lt;/a&gt;
which is a standard across the internet and most
&lt;em&gt;modern&lt;/em&gt; browsers allow viewing.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recapping, we should use JPG images for photographs and SVG
for schematics/diagrams. Another attribute that may be useful is the
Layer management, SVG allows this ... and for raster formats we have the
option to use TIFF.&lt;/p&gt;
&lt;p&gt;Regarding software to generate/edit this type of images I must
say that there are a large number of programs that allow exporting to
these formats: Python/Matplotlib, Matlab, Inkscape, Adobe
Illustrator, GIMP, Photoshop, LibreOffice. If the graph is generated
from a calculation or a data series I use Matplotlib. If
instead, we want to make a schematic or my tool of choice
is &lt;a class="reference external" href="http://www.inkscape.org/"&gt;Inkscape.&lt;/a&gt; This
program is intended to be a free alternative to programs like Adobe
Illustrator —and it does achieve it. Obviously, you could use
Illustrator or Corel Draw for this task. If the only use would be to make
Technical schematics, I think it would be a waste.&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 100%"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="/images/sensor_hall.png" src="https://nicoguaro.github.io/images/sensor_hall.png"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;strong&gt;Figure 1.&lt;/strong&gt; Schematic for magnetic field sensing for &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Neodymium_magnet"&gt;permanent
magnets&lt;/a&gt; using
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Hall_effect"&gt;Hall effect&lt;/a&gt;. From
my Engineering Physics &lt;a class="reference external" href="https://goo.gl/G9RRhC"&gt;thesis&lt;/a&gt; .&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="taking-notes"&gt;
&lt;h2&gt;Taking notes&lt;/h2&gt;
&lt;p&gt;I suppose that to some it would seem a bit trivial to speak of "notetaking"
and much more coming from someone who didn't have notebooks in
high school, but since I'm a bit stubborn I think I'll still write a
little about this. The first thing I would like to mention is that I remember
people talking to me about this at school, but there was never anything
formal regarding developing these skills. Surfing the web,
there is a lot of information. Even the &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Note-taking"&gt;Wikipedia article on
English&lt;/a&gt; is interesting.
There is nothing better to write than to have a good pen and paper with a good
grammage, that's why I still use a notebook where I keep track of
what I do in my research and take notes. However, this scheme is quite linear
and leaves out more &lt;em&gt;contemporary&lt;/em&gt; options. That is, why settle for a document
in this time of hyper-documents? The advantages of taking notes
digitally jump to the eye, in a hyper-document you can have
links, embed images, video and sound.&lt;/p&gt;
&lt;p&gt;Regarding tools, I include a short list here:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://evernote.com/"&gt;Evernote&lt;/a&gt; is probably the most popular tool
for taking notes. It's cross-platform, Freemium  (free basic and paid
advanced functionality), and has many options. I use it, but not much in my
research.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://zim-wiki.org/"&gt;Zim&lt;/a&gt; it is an offline wiki. Has great
number of options like calendar, equations with &lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt;, images ...
anyway. The but that I find is that no I have managed to configure the
equations in Windows (and in my office I must use Windows :-/).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.docear.org/"&gt;Docear&lt;/a&gt; this is a tool thought,
mainly, to handle bibliography. However, it allows to take
notes and, in general, handle the information of the investigation. The
more (or less) appealing feature is that it works around
mental maps.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.zotero.org/"&gt;Zotero&lt;/a&gt; It is also a tool to handle bibliography,
although it allows to handle some note taking (at least around the
bibliography).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.mendeley.com/"&gt;Mendeley&lt;/a&gt; it is very similar to the previous one,
although with more functionalities. The biggest but that I find it
is that in 2013 it was bought by Elsevier.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regarding bibliography management I would also like to mention
&lt;a class="reference external" href="http://endnote.com/"&gt;EndNote&lt;/a&gt; which is the program with the longest
trajectory and &lt;a class="reference external" href="http://jabref.sourceforge.net/"&gt;JabRef&lt;/a&gt; which is the one
that I have used the longest. Some interesting references
comparing bibliography handlers are::
&lt;a class="reference external" href="https://www.researchgate.net/post/alternative_to_Endnote?_tpcectx=qa_overview_following"&gt;[A]&lt;/a&gt;
&lt;a class="reference external" href="http://www.docear.org/2013/10/14/what-makes-a-bad-reference-manager/"&gt;[B]&lt;/a&gt;
&lt;a class="reference external" href="http://www.docear.org/2014/01/15/comprehensive-comparison-of-reference-managers-mendeley-vs-zotero-vs-docear/"&gt;[C]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="graphic-reconstruction"&gt;
&lt;h2&gt;Graphic reconstruction&lt;/h2&gt;
&lt;p&gt;It is common to find information presented in the form of graphics.
It is also common that we want to have the numerical data of these
graphs to be able to compare them with ours. To know if
our measurements/simulations/methods give results similar to others
presented in the literature. We could use powerful image processing software,
or other more modest ones designed specifically for this purpose.&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 100%"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="/images/pointplot.jpg" src="https://nicoguaro.github.io/images/pointplot.jpg"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;strong&gt;Figure 2.&lt;/strong&gt; Original graphic.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 100%"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="/images/digitized_pts.png" src="https://nicoguaro.github.io/images/digitized_pts.png"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;strong&gt;Figure 3.&lt;/strong&gt; Graphic processed in Engauge Digitizer. Some points were
selected (automatically) to obtain their coordinates.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://extensions.libreoffice.org/extension-center/digitizer-of-xy-chart"&gt;Digitizer of XY chart&lt;/a&gt;
this is a plugin for Libreoffice/OpenOffice and it exports the result
to the current spreadsheet, it is simple and easy to use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://digitizer.sourceforge.net/"&gt;Engauge Digitizer&lt;/a&gt;, is the one
I normally use when I need to do this task (see Figures above). It is
open source (and free) and has a fair amount of options
to make the task easier.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://plotdigitizer.sourceforge.net/"&gt;Plot Digitizer&lt;/a&gt; I don't have
a lot of information about this one (since I have never used it), except that
it is written in Java.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://imagej.nih.gov/ij/"&gt;ImageJ&lt;/a&gt; this is a (complete) program for
image processing that is written in Java. I have not used it
for this task on a regular basis, but could be used for it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="scientific-visualization"&gt;
&lt;h2&gt;Scientific visualization&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Scientific_visualization"&gt;Scientific visualization&lt;/a&gt;
is in charge of generating graphs that allow visualizing "scientific data"
to facilitate the understanding behind the data. For this work, many of us have
used scripting languages such as Matlab/Octave, Scilab or Python (with
Matplotlib or Mayavi). However, as visualization is about something visual
—what else?—, it is good have a tool that allows you to generate and change
graphics interactively, although we must always automate as much
amount of work possible (laziness has always been one of the largest mobiles of
humanity, you have to accept it).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://code.enthought.com/projects/mayavi/"&gt;MayaVi&lt;/a&gt;, this is a
program written in Python that uses &lt;a class="reference external" href="http://en.wikipedia.org/wiki/VTK"&gt;VTK&lt;/a&gt;. It is very versatile and the great
advantage it has is that it can be used within Python
&lt;a class="reference external" href="https://scipy-lectures.github.io/packages/3d_plotting/index.html"&gt;scripts&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.paraview.org/"&gt;Paraview&lt;/a&gt;, this program is also
based on VTK and allows to parallelize the work (for
multi-core computers and clusters). Below I include a
video generated in Paraview to show its capabilities.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://wci.llnl.gov/simulation/computer-codes/visit"&gt;Visit&lt;/a&gt;,
this program is also VTK based, I have never used it but
I wanted to include it because people say it can be more intuitive than
Paraview.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.tecplot.com/"&gt;Tecplot,&lt;/a&gt; this program is very popular
at Purdue. I think it was initially intended for CFD, but it has been
much expanded. Regarding 3D graphics, it does not seem better than
ParaView, however, the 2D graphics capabilities (XY graphics, and
others) make it attractive.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://jwork.org/scavis/"&gt;Scavis&lt;/a&gt;, this is written in Java. I didn't
know it until I started writing this post but it caught my eye and I wante
to put it on the list. Something that cught my attention is that it allows
scripting in several languages: Java, Python, Ruby, BeanShell, and
Matlab/Octave.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.originlab.com/"&gt;Origin&lt;/a&gt;, I have never used it but I didn't
want to leave it out because I've always heard great things about it
(probably comparing it with Excel ... but I can't comment).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe src="https://player.vimeo.com/video/2016815" width="640" height="483" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;
&lt;/iframe&gt;
&lt;p&gt;
    &lt;ahref&gt;
    Cross fire simulation
    &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.
&lt;/ahref&gt;&lt;/p&gt;&lt;/div&gt;
&lt;div class="section" id="version-control"&gt;
&lt;h2&gt;Version control&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Version_control"&gt;Version control&lt;/a&gt; is the
management of changes in documents, source code and other types of
information. This can be done manually, but it is easy to make mistakes
or replace the version of a code easily, and for this it is
advisable to use software that facilitates the work. The idea is to
have a &lt;em&gt;place&lt;/em&gt; (repository) where versions and changes are stored, and keep
track of them. In this way you can revert to a previous version of documents
and multiple people can work together. There are two paradigms (or
architectures) for version control: centralized and distributed. In the first
there is a centralized repository where you find all the information. In
distributed architectures each user has a copy of the repository. Personally I
have only used &lt;a class="reference external" href="http://git-scm.com/"&gt;Git&lt;/a&gt;, which falls under the distributed
category and is one of the most popular version contorl software
at the moment; it is used by companies like Google, Facebook and Netflix.&lt;/p&gt;
&lt;p&gt;An example can be seen in this
&lt;a class="reference external" href="https://github.com/bebopsan/SEC-Thesis"&gt;repository&lt;/a&gt;, with the
undergrad thesis document of Santiago Echeverri, which
I had the opportunity to advise. We edited this document
together while he was in Medellin and I was in
USA. The document was made in the markup language
&lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;In addition to having control over the versions and being able to access
previous versions, it is useful to be able to store the information in a
accesible location from anywhere in the world with a connection to
Internet. This can be achieved with your own server, obviously, or
also through an external provider. Two projects that are very
popular for hosting repositories are
(&lt;a class="reference external" href="http://www.infoworld.com/d/application-development/bitbucket-vs-github-which-project-host-has-the-most-227061"&gt;comparison between Github and
BitBucket&lt;/a&gt;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/"&gt;Github&lt;/a&gt; is the most popular at the moment.
It allows to have projects with an unlimited number of collaborators.
To have a private repository it is necessary to pay.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://bitbucket.org/"&gt;BitBucket&lt;/a&gt; has the main advantage that
allows you to have private repositories without the need to pay. It is only
free for projects with 5 or fewer collaborators (or for
&lt;a class="reference external" href="https://bitbucket.org/account/user/nicoguaro/plans/"&gt;academic projects&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="suggested-links"&gt;
&lt;h2&gt;Suggested links&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Software Carpentry. &lt;a class="reference external" href="http://software-carpentry.org/"&gt;http://software-carpentry.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python Scientific Lecture Notes. &lt;a class="reference external" href="https://scipy-lectures.github.io/"&gt;https://scipy-lectures.github.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Surely I left a lot of topics outside as well as tools within a topic. If that's
the case, I would appreciate if you tell me in the comments.&lt;/p&gt;
&lt;/div&gt;</description><category>note taking</category><category>old blog</category><category>research</category><category>scientific visualization</category><guid>https://nicoguaro.github.io/posts/herramientas-investigacion/</guid><pubDate>Sat, 12 Jul 2014 09:24:00 GMT</pubDate></item><item><title>Note taking with my tablet</title><link>https://nicoguaro.github.io/posts/notas-tableta/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;Last year baby Jesus gave me a &lt;a class="reference external" href="http://www.samsung.com/us/mobile/galaxy-note/GT-N8013EAVXAR"&gt;Samsung Galaxy Note
10.1&lt;/a&gt;
(model 2012). This tablet is designed for taking notes, as it brings
an S-Pen (made by Wacom, which I think makes the
&lt;a class="reference external" href="http://www.wacom.com/en/us/business/technology-solutions"&gt;technology&lt;/a&gt;
for most commercial tablets) and various applications
designed for it. Such as: S Note, PhotoShop Touch, &lt;a class="reference external" href="http://www.crayonphysics.com/"&gt;Crayon
Physics&lt;/a&gt; (you have to play it is very
fun).&lt;/p&gt;
&lt;p&gt;So I decided to make an experiment taking notes in class with my
tablet completely in the two subjects I studied in the spring 2014 term.
In Optimization I used the pencil that came with the
tablet and for Molecular Physics I used a &lt;a class="reference external" href="http://www.wacom.com/en/us/everyday/bamboo-stylus-feel-samsung-galaxy-note"&gt;Bamboo
Stylus&lt;/a&gt;
which is supposed to be designed specifically for this tablet. I took
notes with the default software (S Note) and converted to PDF
(the notes were made entirely with the software):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://drive.google.com/file/d/0ByfUxGpgeoJ9TExLUkJ5TGVNYzA/edit?usp=sharing"&gt;Optimization notes&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://drive.google.com/file/d/0ByfUxGpgeoJ9aEJQejZIYzFHdk0/edit?usp=sharing"&gt;Computational (Bio)Molecular Physics notes&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although the touch sensation of the Bamboo Stylus is much more pleasant,
the performance of the S Pen is much better. In both cases, the feeling is
very different from using paper and pencil (pen/fountain pen), largely
because friction is very little in comparison (something that is
better with conductive pencils). The user experience of the
pencil varies greatly from one application to another, resulting in good
expectations. As for taking notes: it is highly recommended to take
short notes (like meetings); not so much for taking long notes (like
class notes), unless you want to have a digital copy
easily.&lt;/p&gt;
&lt;div class="section" id="apps"&gt;
&lt;h2&gt;Apps&lt;/h2&gt;
&lt;p&gt;The technology behind the tablet is the most important part. Simply pu, the pen
has an antenna and the tablet a grid of antennas that are tuned to the same
frequency (&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Wacom#Technology"&gt;531 kHz&lt;/a&gt;, in
&lt;a class="reference external" href="http://www.androidauthority.com/break-it-down-how-does-the-s-pen-work-154435/"&gt;this link&lt;/a&gt;
they explain how it works a little better). However, it is also
important to consider the software that is used to take notes:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://content.samsung.com/us/contents/aboutn/sNoteIntro.do"&gt;S
Note&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;It is the native app for taking notes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It has shape and equations recognition. Equations should be simple,
don't expect to take notes of Quantum Mechanics or Continuum Mechanics
using this tool.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It allow to insert images and record sound within the app.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It has "palm rejection".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The size of the page is not configurable.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://papyrusapp.com/"&gt;Papyrus&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;It has "palm rejection" and allow to setup your finger as eraser
(this can be very useful).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It allows different page sizes and backgrounds.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It allows to draw rectangles and ellipses.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Brushes are very basic.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://noteanytime.com/en/"&gt;Note Anytime&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;It allows to have different page sizes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It stores paths as vector graphics and you cand edit them (change color
size or style) later.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It has several brushes and they are even customizable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It can't convert notes to PDF.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It does not have "palm rejection".&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://code.google.com/p/android-quill/"&gt;Quill&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;It is open source, although if you get it through "Google Store" it
has a cost.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The algorithm for path recognition is better than the others (and
it is adjustable).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is still in a preliminary stage.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sadly, there isn't a version of &lt;a class="reference external" href="https://www.fiftythree.com/paper.html"&gt;Paper&lt;/a&gt;
(by FiftyThree) on Android, and, although there is a version of &lt;a class="reference external" href="http://www.wacom.com/en/us/everyday/bamboo-paper"&gt;Bamboo
Paper&lt;/a&gt; (by Wacom)
for Android it is not compatible with the tablet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="in-conclusion"&gt;
&lt;h2&gt;In conclusion&lt;/h2&gt;
&lt;p&gt;Replacing "traditional" note taking with "digital" notes
It may be a bit rushed, but it is doable. The application that
comes by default (S Note) allows to do the job "out of the
box", but it could be better. The applications that I find the most
Promising are: Note Anytime and Quill.&lt;/p&gt;
&lt;/div&gt;</description><category>note taking</category><category>old blog</category><category>tablet</category><guid>https://nicoguaro.github.io/posts/notas-tableta/</guid><pubDate>Wed, 21 May 2014 02:23:00 GMT</pubDate></item></channel></rss>