<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nicolás' blog (Posts about libreoffice)</title><link>https://nicoguaro.github.io/</link><description></description><atom:link href="https://nicoguaro.github.io/categories/libreoffice.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2025 &lt;a href="mailto:nicoguarin@gmail.com"&gt;Nicolás Guarín-Zapata&lt;/a&gt; 
&lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;
&lt;img alt="Creative Commons License"
style="border-width:0"
src="https://i.creativecommons.org/l/by/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Tue, 20 May 2025 14:27:30 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Technical writing: Using Figures</title><link>https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;In a &lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing"&gt;previous post&lt;/a&gt; I mentioned some general aspects of
technical writing. In this one, I would like to talk about including
figures in technical documents.&lt;/p&gt;
&lt;p&gt;This post is about some details on the planning of figures for technical
documents. The main document in mind is a technical article (research paper,
techincal report). Although, it also applies to presentations or posters.&lt;/p&gt;
&lt;section id="graphic-formats"&gt;
&lt;h2&gt;Graphic formats&lt;/h2&gt;
&lt;p&gt;First, I should mention that there are two main types of graphics, namely:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;vector graphics; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;raster graphics.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They serve different purposes and we should use them accordingly. For example,
for diagrams or schematics is better to use vector formats, in general. On
the other hand, raster formats are better suited for images such as photographs
or illustrations.&lt;/p&gt;
&lt;section id="vector-graphics"&gt;
&lt;h3&gt;Vector graphics&lt;/h3&gt;
&lt;p&gt;A &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Vector_graphics"&gt;vector image&lt;/a&gt;
is an image that is made up of geometric entities. In this case, the
stored information is not point-to-point but &lt;em&gt;the construction&lt;/em&gt; of
the shapes that constitute it. For this reason, these images don't
&lt;em&gt;pixelate&lt;/em&gt; because the information you have is how to build it.
This type of images is the best options for schematics and diagrams,
since the only stored information are the strokes and text added to
them. The &lt;em&gt;de facto&lt;/em&gt; standard for this type of images is PDF —it is the one
I usually include in my documents \(\LaTeX\). Although PDF is the
&lt;em&gt;standard&lt;/em&gt;, the preferred format is &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Scalable_Vector_Graphics"&gt;SVG (Scalable Vector
Graphics)&lt;/a&gt;
which is a standard across the internet and most &lt;em&gt;modern&lt;/em&gt; browsers
let you render them.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="raster-graphics"&gt;
&lt;h3&gt;Raster graphics&lt;/h3&gt;
&lt;p&gt;A &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Raster_graphics"&gt;raster image&lt;/a&gt; is an image
which is represented by an array (or rectangular grid) of pixels. In other
words, the color information that there are in each point of the image. The
most popular formats store the compressed information. For high contrast
graphics (such as schematics or diagrams) the best format is PNG. If you have
an animation, GIF would be preferable. And in the case of photographs it is
better to use JPG.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="summary-for-formats"&gt;
&lt;h3&gt;Summary for formats&lt;/h3&gt;
&lt;p&gt;Summarizing, we should use JPG images (only) for photographs and SVG for
schematics/diagrams. Another attribute that may be useful is the management
of layers. Having several layers gives you the option of stacking different
types of information separately. For example, you can have the background,
the image, and the annotations in different layers. This way you can modify
only the part of the figure that concerns you. You can automate the translation
of the annotations this way without much problem. Formats such as SVG let you
have several layers. In the case of raster formats, we have the
option to use TIFF.&lt;/p&gt;
&lt;p&gt;Regarding software to generate/edit this type of images I must say that there
are a large number of programs that allow exporting to these formats:
Python/Matplotlib, Matlab, Inkscape, Adobe Illustrator, GIMP, Photoshop,
LibreOffice. If the graph is generated from a calculation or a data series I
use Matplotlib. If, instead, we want to make a schematic my tool of choice
is &lt;a class="reference external" href="http://www.inkscape.org/"&gt;Inkscape&lt;/a&gt;. This program is intended to be a
free alternative to programs like Adobe Illustrator —and it does achieve it.
Obviously, you could use Illustrator or Corel Draw for this task. If the only
use would be to make technical schematics, I think it would be a waste.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="designing-figures-for-documents"&gt;
&lt;h2&gt;Designing figures for documents&lt;/h2&gt;
&lt;p&gt;I suggest starting from the nominal size of the figure in the document. For
most of our documents, the figures will remain digital and this
might seem counterintuitive. Nevertheless, I find this approach much easier.
One of the reasons is that we still embed our figure in a document with a
nominal size. Also, when thinking about font size it is common that we have as
reference printed text. On top of that, we should consider that the human eye
has a resolution limit, so we can't just scale down our figures.&lt;/p&gt;
&lt;p&gt;Also, there is no such thing as resolution of a digital image. Resolution
refers to a density of pixels per unit length. This makes sense when printing
images, but not in the digital case. Nevertheless, the figures have a nominal
size and hence a nominal resolution. That is, the number of pixels in one
direction divided by its nominal size. It is a good idea to consider a
minimal resolution of 150 dpi (dots per inch). For example, an image of
6 in × 3 in. This image would have a size of (at 150 dpi) of de 900 px × 450 px.&lt;/p&gt;
&lt;p&gt;The following Python snippet creates a figure of size 6 in × 3 in, and plots
the function \(f(x) = \sin(x^2)\) and stores it as an image of size
900 in × 450 in.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_d054d70256ed4a9da1727a8d9146c9f3-1" name="rest_code_d054d70256ed4a9da1727a8d9146c9f3-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_d054d70256ed4a9da1727a8d9146c9f3-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;numpy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;np&lt;/span&gt;
&lt;a id="rest_code_d054d70256ed4a9da1727a8d9146c9f3-2" name="rest_code_d054d70256ed4a9da1727a8d9146c9f3-2" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_d054d70256ed4a9da1727a8d9146c9f3-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;a id="rest_code_d054d70256ed4a9da1727a8d9146c9f3-3" name="rest_code_d054d70256ed4a9da1727a8d9146c9f3-3" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_d054d70256ed4a9da1727a8d9146c9f3-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;linewidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d054d70256ed4a9da1727a8d9146c9f3-4" name="rest_code_d054d70256ed4a9da1727a8d9146c9f3-4" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_d054d70256ed4a9da1727a8d9146c9f3-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d054d70256ed4a9da1727a8d9146c9f3-5" name="rest_code_d054d70256ed4a9da1727a8d9146c9f3-5" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_d054d70256ed4a9da1727a8d9146c9f3-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_d054d70256ed4a9da1727a8d9146c9f3-6" name="rest_code_d054d70256ed4a9da1727a8d9146c9f3-6" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_d054d70256ed4a9da1727a8d9146c9f3-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d054d70256ed4a9da1727a8d9146c9f3-7" name="rest_code_d054d70256ed4a9da1727a8d9146c9f3-7" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_d054d70256ed4a9da1727a8d9146c9f3-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d054d70256ed4a9da1727a8d9146c9f3-8" name="rest_code_d054d70256ed4a9da1727a8d9146c9f3-8" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_d054d70256ed4a9da1727a8d9146c9f3-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d054d70256ed4a9da1727a8d9146c9f3-9" name="rest_code_d054d70256ed4a9da1727a8d9146c9f3-9" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_d054d70256ed4a9da1727a8d9146c9f3-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savefig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"fig_ex_python.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dpi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And the following in Matlab.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code matlab"&gt;&lt;a id="rest_code_71218b41ca834a929205fbedb52df691-1" name="rest_code_71218b41ca834a929205fbedb52df691-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_71218b41ca834a929205fbedb52df691-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_71218b41ca834a929205fbedb52df691-2" name="rest_code_71218b41ca834a929205fbedb52df691-2" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_71218b41ca834a929205fbedb52df691-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Units&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'inches'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_71218b41ca834a929205fbedb52df691-3" name="rest_code_71218b41ca834a929205fbedb52df691-3" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_71218b41ca834a929205fbedb52df691-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;a id="rest_code_71218b41ca834a929205fbedb52df691-4" name="rest_code_71218b41ca834a929205fbedb52df691-4" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_71218b41ca834a929205fbedb52df691-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_71218b41ca834a929205fbedb52df691-5" name="rest_code_71218b41ca834a929205fbedb52df691-5" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_71218b41ca834a929205fbedb52df691-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_71218b41ca834a929205fbedb52df691-6" name="rest_code_71218b41ca834a929205fbedb52df691-6" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_71218b41ca834a929205fbedb52df691-6"&gt;&lt;/a&gt;&lt;span class="nb"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'LineWidth'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_71218b41ca834a929205fbedb52df691-7" name="rest_code_71218b41ca834a929205fbedb52df691-7" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_71218b41ca834a929205fbedb52df691-7"&gt;&lt;/a&gt;&lt;span class="nb"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'FontSize'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_71218b41ca834a929205fbedb52df691-8" name="rest_code_71218b41ca834a929205fbedb52df691-8" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_71218b41ca834a929205fbedb52df691-8"&gt;&lt;/a&gt;&lt;span class="nb"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'y'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'FontSize'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_71218b41ca834a929205fbedb52df691-9" name="rest_code_71218b41ca834a929205fbedb52df691-9" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_71218b41ca834a929205fbedb52df691-9"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'PaperSize'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;a id="rest_code_71218b41ca834a929205fbedb52df691-10" name="rest_code_71218b41ca834a929205fbedb52df691-10" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/#rest_code_71218b41ca834a929205fbedb52df691-10"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'fig_ex_matlab'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'-dpng'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'-r150'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Following I summarize some sizes for articles, posters and slides.&lt;/p&gt;
&lt;section id="articles"&gt;
&lt;h3&gt;Articles&lt;/h3&gt;
&lt;p&gt;For an article is common to use letter size that is 8.5 in × 11 in
(215.9 mm × 279.4 mm). Another common size is A4 that is 210 mm × 297 mm
(8.27 in × 11.7 in).&lt;/p&gt;
&lt;p&gt;A guideline for common sizes is the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;1.0 columns width: 90 mm (3.5 in);&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.5 columns width: 140 mm (5.5 in);&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.0 columns width: 190 mm (6.5 in);&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and depicted in the following image.&lt;/p&gt;
&lt;img alt="Figure widths compared with letter size paper." class="align-center" src="https://nicoguaro.github.io/images/tech_writing/sizes.png" style="width: 400px;"&gt;
&lt;p&gt;If we consider a &lt;em&gt;resolution&lt;/em&gt; of 300 dpi, we have the following number
of pixels horizontally&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;1.0 columns width: 1050 pixels;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.5 columns width: 1650 pixels; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.0 columns width: 1950 pixels.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that an HD display has 1920 pixels in the horizontal direction. That means
that you need a HD display to be able to see that much pixels.&lt;/p&gt;
&lt;p&gt;Regarding text size, it is common to have sizes between 8 and 12 pts for figures.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="posters"&gt;
&lt;h3&gt;Posters&lt;/h3&gt;
&lt;p&gt;In the case of an A0 size paper (841 mm × 1189 mm, 33 in × 47 in) the sizes
would be around:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;1.0 columns width: 360 mm (14 in);&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.5 columns width: 560 mm (22 in); and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.0 columns width: 760 mm (26 in).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Keep in mind that a poster might not fit into the two-column format. Although,
I still find the reference for the size useful.&lt;/p&gt;
&lt;p&gt;Regarding the size of fonts in posters it is a good idea to keep it over
24 pts (see reference 3).&lt;/p&gt;
&lt;/section&gt;
&lt;section id="slides"&gt;
&lt;h3&gt;Slides&lt;/h3&gt;
&lt;p&gt;In the case of slides there are two common aspect ratios 16:9 and 4:3.
And, different software have different nominal sizes. The following
table present the nominal sizes for LibreOffice Impress, MS
Power Point and LaTeX using Beamer.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;16:9&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;4:3&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;LibreOffice Impress&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;11.02 in × 6.20 in&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;11.02 in × 8.00 in&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;MS Power Point&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;13.32 in × 7.50 in&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;10.00 in × 7.50 in&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;LaTeX (Beamer)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;16.00 cm × 9.00 cm&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;12.80 cm × 9.60 cm&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;section id="update-history"&gt;
&lt;h3&gt;Update History&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;[May 20, 2025]: Add LaTeX nominal sizes.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Matthew Butterick (2019). &lt;a class="reference external" href="https://practicaltypography.com/"&gt;Butterick's Practical Typography&lt;/a&gt;.
Second edition, Matthew Butterick.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rougier, Nicolas P., Michael Droettboom, and Philip E. Bourne (2014).
“Ten Simple Rules for Better Figures.” PLOS Computational Biology 10(9):e1003833.
DOI: 10.1371/journal.pcbi.1003833.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Erren, Thomas C., and Philip E. Bourne. 2007.
“Ten Simple Rules for a Good Poster Presentation.”
PLOS Computational Biology 3(5):e102. DOI: 10.1371/journal.pcbi.0030102&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Elsevier. (n.d.). "Artwork Overview." Retrieved November 1, 2021,
from &lt;a class="reference external" href="https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-overview"&gt;https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-overview&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Elsevier. (n.d.). "Artwork sizing." Retrieved November 1, 2021,
from &lt;a class="reference external" href="https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-sizing"&gt;https://www.elsevier.com/authors/policies-and-guidelines/artwork-and-media-instructions/artwork-sizing&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Journal of applied physics (n.d.). "Preparing Your Manuscript: Authors
Instruction." Retrieved November 1, 2021, from &lt;a class="reference external" href="https://aip.scitation.org/jap/authors/manuscript"&gt;https://aip.scitation.org/jap/authors/manuscript&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Werner. (2012). Answer to “Proper page size for slides”
[Online post]. TeX - LaTeX Stack Exchange. &lt;a class="reference external" href="https://tex.stackexchange.com/a/75651"&gt;https://tex.stackexchange.com/a/75651&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>figures</category><category>inkscape</category><category>latex</category><category>libreoffice</category><category>research</category><category>typography</category><category>writing</category><guid>https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs/</guid><pubDate>Wed, 03 Nov 2021 17:53:40 GMT</pubDate></item><item><title>Technical writing</title><link>https://nicoguaro.github.io/posts/tech_writing/tech_writing/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;This is the first post about technical writing &lt;a class="brackets" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing/#footnote-1" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;*&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; from a series that
I will be creating and uploading. Technical writing is
something that most of us have to deal with in different contexts. For
example, in college coursework, research publications, software documentation.
The main idea of the series is to mention some of the tricks that I have
learned over the years and some tools that might come in handy.&lt;/p&gt;
&lt;p&gt;Future posts will (probably) be about:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math"&gt;Using equations&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_figs"&gt;Using figures&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using tables; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Managing bibliographic references.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="the-current-post"&gt;
&lt;h2&gt;The current post&lt;/h2&gt;
&lt;p&gt;As mentioned above, technical writing is something that a lot of persons
have to deal with. This is a skill that is sometimes overlooked,
but it should not. According to the
&lt;a class="reference external" href="https://www.bls.gov/ooh/media-and-communication/technical-writers.htm"&gt;U.S. Bureau of Labor Statistics&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Technical writers prepare instruction manuals, how-to guides,
journal articles, and other supporting documents to communicate complex and
technical information more easily.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And it is a desired skill in the workplace. Its demand is expected to grow
around 10% in the current decade.&lt;/p&gt;
&lt;section id="typography"&gt;
&lt;h3&gt;Typography&lt;/h3&gt;
&lt;p&gt;The first thing that I should mention is that writing documents is
typography. "Putting documents" together is typography because
we are &lt;em&gt;designing with text&lt;/em&gt; (Butterick, 2019). So, we should consider
ourselves typographers since we are constantly designing documents.&lt;/p&gt;
&lt;p&gt;I would suggest taking a look at "Butterick's Practical Typography"
since it is a really good book about it and it reads smoothly. I will
mention some important points here according to Butterick's
"Typography in ten minutes":&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;The most important typographic selection is on the body text.
This is due to the fact that it is most of the document.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose a point size between 10-12 points for printed documents
and 15-25 pixels for digital documents.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Line spacing should be between 120-145 % of the point size.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Line length should be between 45-90 characters. This is roughly
2 or 3 small caps alphabets:&lt;/p&gt;
&lt;p&gt;abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mind the selection of your font. Try to avoid default fonts such as
Arial, Calibri or Times New Roman.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;section id="editors"&gt;
&lt;h3&gt;Editors&lt;/h3&gt;
&lt;p&gt;Another point that I want to touch in this post is about editors. The first
question that arises is "what editor should I use?". The short answer is:
&lt;strong&gt;use whatever your peers are using&lt;/strong&gt;. That's my best advice; that way you
have people to discuss with you about your doubts.&lt;/p&gt;
&lt;p&gt;The long answer … is that each editor has its weak and strong points. I
have written scientific papers in LaTeX, LibreOffice Writer and MS Word;
all of them look professional. So, in the end, you can write your
documents in several ways and achieve a similar result. I prefer to use
LaTeX for long documents since it is centered in the structure of the
document instead of the appearance and this is the way one should manage
a long document like a dissertation, in my opinion.&lt;/p&gt;
&lt;p&gt;If you just want me to pick one editor and suggest it to you, I would
say that you should ride with &lt;a class="reference external" href="https://www.libreoffice.org/"&gt;LibreOffice&lt;/a&gt;.
A good reference for it is "Designing with LibreOffice". Once you learn
how to use styles you will ask how have you been writing documents all
this time.&lt;/p&gt;
&lt;p&gt;There are two main flavors for editors that I am going to discuss:
WYSIWYG (What You See Is What You Get) and markup-based editors.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;WYSIWYG. This category is the one that most people is familiar with.
Two examples are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;LibreOffice writer; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microsoft Word.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Markup-based editors rely on marks on the "text" to differentiate
sections and styles. In this case, your text looks like code, as seen
in the following image&lt;/p&gt;
&lt;img alt="/images/rst_code.png" src="https://nicoguaro.github.io/images/rst_code.png"&gt;
&lt;p&gt;Some examples are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;LaTeX;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.markdownguide.org/getting-started"&gt;Markdown&lt;/a&gt;; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docutils.sourceforge.io/rst.html"&gt;reStructuredtext&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Independently of what your main editor is I suggest that you use
&lt;a class="reference external" href="https://pandoc.org/"&gt;Pandoc&lt;/a&gt;. It allows you to convert between several
formats, making the process a little bit easier. There is even an editor
based completely on it named &lt;a class="reference external" href="https://panwriter.com/"&gt;Panwriter&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Matthew Butterick (2019). &lt;a class="reference external" href="https://practicaltypography.com/"&gt;Butterick's Practical Typography&lt;/a&gt;.
Second edition, Matthew Butterick.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wikibooks contributors. (2020). &lt;a class="reference external" href="https://en.wikibooks.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt;.
Wikibooks, The Free Textbook Project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bruce Byfield (2016). &lt;a class="reference external" href="https://designingwithlibreoffice.com/"&gt;Designing with LibreOffice&lt;/a&gt;.
Friends of OpenDocument, Inc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deville, S. (2015).
&lt;a class="reference external" href="https://sylvaindeville.net/2015/07/17/writing-academic-papers-in-plain-text-with-markdown-and-jupyter-notebook/"&gt;Writing academic papers in plain text with Markdown and Jupyter notebook&lt;/a&gt;.
Sylvain Deville.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Eric Holscher (2016).
&lt;a class="reference external" href="https://www.ericholscher.com/blog/2016/jul/1/sphinx-and-rtd-for-writers/"&gt;An introduction to Sphinx and Read the Docs for Technical Writers&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="footnote-1" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing/#footnote-reference-1"&gt;*&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;This post is (somewhat) related to a
&lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing/herramientas-investigacion/"&gt;previous post&lt;/a&gt;
where I discussed research tools that most of us need but are not
commonly taught in a formal fashion.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>latex</category><category>libreoffice</category><category>research</category><category>typography</category><category>writing</category><guid>https://nicoguaro.github.io/posts/tech_writing/tech_writing/</guid><pubDate>Thu, 28 May 2020 20:53:40 GMT</pubDate></item><item><title>Technical writing: using math</title><link>https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/</link><dc:creator>Nicolás Guarín-Zapata</dc:creator><description>&lt;p&gt;In a &lt;a class="reference external" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing"&gt;previous post&lt;/a&gt; I mentioned some general aspects of
technical writing. In this one, I would like to talk about including
mathematical expressions in technical documents.&lt;/p&gt;
&lt;p&gt;There are two main ways to include math in your documents:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;using text; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;using a graphic interface.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using a graphic interface, such as the equation editor in
LibreOffice Writer or MS Word, or
&lt;a class="reference external" href="http://www.dessci.com/en/products/mathtype/"&gt;MathType&lt;/a&gt; is convenient.
You don't need to memorize anything and you can look at your expressions
while creating them. Nevertheless, it can be slow compared to using text
input — once you are comfortable with the syntax.&lt;/p&gt;
&lt;p&gt;There are two main flavors of equations used over the internet:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/MathML"&gt;MathML&lt;/a&gt; is a
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/World_Wide_Web_Consortium"&gt;W3C standard&lt;/a&gt;
for equations and it is included in HTML5, so it would work in all
modern browsers. The problem with it is that it is not designed to be
written by hand. So one can use it if have some automatic way of generating
the code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.overleaf.com/learn/latex/Mathematical_expressions"&gt;LaTeX&lt;/a&gt;
is my suggested way to write equations. The learning curve might be a
little bit steep at the beginning but it pays off.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One tool that helps with equations is &lt;a class="reference external" href="https://mathpix.com/"&gt;MathPix Snip&lt;/a&gt;
that automatically generates LaTeX or MathML code from an image, even a
handwritten one. Another tool that is really useful is
&lt;a class="reference external" href="http://detexify.kirelabs.org/classify.html"&gt;Detexify&lt;/a&gt; that let you
draw a symbol and gives you the LaTeX syntax for it.&lt;/p&gt;
&lt;p&gt;In the remaining of the posts I will show my suggestions for working
with equations in LibreOffice and MS Word. If you are using LaTeX or
MarkDown/ReStructuredText for your documents you are already using
LaTeX for your equations.&lt;/p&gt;
&lt;section id="libreoffice"&gt;
&lt;h2&gt;LibreOffice&lt;/h2&gt;
&lt;p&gt;LibreOffice has its own math editor with its own syntax and it works
fine for small expressions, but it gets complicated for large equations or
long algebraic manipulations. For LibreOffice I would suggest to use
&lt;a class="reference external" href="http://roland65.free.fr/texmaths/install.html"&gt;TexMaths&lt;/a&gt;, it is simple to
use and works for the word processor (Writer) and presentations (Impress).
I suppose it also works for spreadsheets (Calc), but I don't remember
using equations in one.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="ms-office"&gt;
&lt;h2&gt;MS Office&lt;/h2&gt;
&lt;p&gt;MS Office has its own math editor as well, it works fine and is easy to use.
Nevertheless, the same problem appears when you want long expressions.
One option is to directly use
&lt;a class="reference external" href="https://docs.microsoft.com/en-us/archive/blogs/murrays/latex-math-in-office"&gt;LaTeX in Office&lt;/a&gt;
but I prefer to use &lt;a class="reference external" href="http://www.jonathanleroux.org/software/iguanatex/download.html"&gt;IguanaTex&lt;/a&gt;.
It is a complement that allows to input equations similarly to TexMaths in
LibreOffice.&lt;/p&gt;
&lt;p&gt;You could also directly paste MathML equations into MS Word (&amp;gt;2013 and Windows).&lt;/p&gt;
&lt;/section&gt;
&lt;section id="use-a-sympy"&gt;
&lt;h2&gt;Use a SymPy&lt;/h2&gt;
&lt;p&gt;Indepent of the tool that you use to write your documents I strongly suggest
to use a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Computer_algebra_system"&gt;CAS&lt;/a&gt;
(Computer Algebra System), such as Mathematica or SymPy. These programs
have automatic generation of LaTeX and MathML from expression and that can
ease the process a lot.&lt;/p&gt;
&lt;p&gt;Let's check an example. Suppose that we have the function&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
f(x) = \exp(-x^2) \sin(3*x)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;and we want to compute its second derivative&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
f''(x) = \left(- 12 x \cos{\left(3 x \right)} + 2 \left(2 x^{2} - 1\right) \sin{\left(3 x \right)} - 9 \sin{\left(3 x \right)}\right) e^{- x^{2}}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;The following code gives us the LaTex code&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_fedd3188db7a49158191c4037451dcf7-1" name="rest_code_fedd3188db7a49158191c4037451dcf7-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_fedd3188db7a49158191c4037451dcf7-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;sympy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_fedd3188db7a49158191c4037451dcf7-2" name="rest_code_fedd3188db7a49158191c4037451dcf7-2" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_fedd3188db7a49158191c4037451dcf7-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;init_session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_fedd3188db7a49158191c4037451dcf7-3" name="rest_code_fedd3188db7a49158191c4037451dcf7-3" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_fedd3188db7a49158191c4037451dcf7-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_fedd3188db7a49158191c4037451dcf7-4" name="rest_code_fedd3188db7a49158191c4037451dcf7-4" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_fedd3188db7a49158191c4037451dcf7-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;fxx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_fedd3188db7a49158191c4037451dcf7-5" name="rest_code_fedd3188db7a49158191c4037451dcf7-5" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_fedd3188db7a49158191c4037451dcf7-5"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fxx&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that is&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code latex"&gt;&lt;a id="rest_code_fb3e1a62dfd24be9946a7d5aac04ef3b-1" name="rest_code_fb3e1a62dfd24be9946a7d5aac04ef3b-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_fb3e1a62dfd24be9946a7d5aac04ef3b-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(- 12 x &lt;span class="k"&gt;\cos&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt; + 2 &lt;span class="k"&gt;\left&lt;/span&gt;(2 x&lt;span class="nb"&gt;^{&lt;/span&gt;2&lt;span class="nb"&gt;}&lt;/span&gt; - 1&lt;span class="k"&gt;\right&lt;/span&gt;) &lt;span class="k"&gt;\sin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt; - 9 &lt;span class="k"&gt;\sin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\left&lt;/span&gt;(3 x &lt;span class="k"&gt;\right&lt;/span&gt;)&lt;span class="nb"&gt;}&lt;/span&gt;&lt;span class="k"&gt;\right&lt;/span&gt;) e&lt;span class="nb"&gt;^{&lt;/span&gt;- x&lt;span class="nb"&gt;^{&lt;/span&gt;2&lt;span class="nb"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That corresponds to the code that I used above to render the equation&lt;/p&gt;
&lt;p&gt;If, we wanted the MathML code of that expression we could use
the following snippet&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_5549e71608f149cd979e3d8404b1eb05-1" name="rest_code_5549e71608f149cd979e3d8404b1eb05-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_5549e71608f149cd979e3d8404b1eb05-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;sympy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_5549e71608f149cd979e3d8404b1eb05-2" name="rest_code_5549e71608f149cd979e3d8404b1eb05-2" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_5549e71608f149cd979e3d8404b1eb05-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;init_session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_5549e71608f149cd979e3d8404b1eb05-3" name="rest_code_5549e71608f149cd979e3d8404b1eb05-3" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_5549e71608f149cd979e3d8404b1eb05-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_5549e71608f149cd979e3d8404b1eb05-4" name="rest_code_5549e71608f149cd979e3d8404b1eb05-4" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_5549e71608f149cd979e3d8404b1eb05-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;fxx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_5549e71608f149cd979e3d8404b1eb05-5" name="rest_code_5549e71608f149cd979e3d8404b1eb05-5" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_5549e71608f149cd979e3d8404b1eb05-5"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mathml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fxx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;printer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"presentation"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;notice the extra argument &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;printer="presentation"&lt;/span&gt;&lt;/code&gt;. If we want to add
this to MS Word, for example, we could add the output (that I will not
show because is really long) inside the following&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code xml"&gt;&lt;a id="rest_code_fe8fcef96e374ea5a791e30f9231051e-1" name="rest_code_fe8fcef96e374ea5a791e30f9231051e-1" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_fe8fcef96e374ea5a791e30f9231051e-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;math&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns =&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1998/Math/MathML"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_fe8fcef96e374ea5a791e30f9231051e-2" name="rest_code_fe8fcef96e374ea5a791e30f9231051e-2" href="https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/#rest_code_fe8fcef96e374ea5a791e30f9231051e-2"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;/math&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When using Jupyter Notebook this can be done graphically with a
right click over the expression. Then, the following menu is
shown&lt;/p&gt;
&lt;img alt="/images/jupyter_export_eqs.png" src="https://nicoguaro.github.io/images/jupyter_export_eqs.png"&gt;
&lt;/section&gt;
&lt;section id="references"&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;“How to Insert Equations in Microsoft Word.” WikiHow,
&lt;a class="reference external" href="https://www.wikihow.com/Insert-Equations-in-Microsoft-Word"&gt;https://www.wikihow.com/Insert-Equations-in-Microsoft-Word&lt;/a&gt;.
Accessed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“Copy MathML into Word to Use as Equation.” Stack Overflow,
&lt;a class="reference external" href="https://stackoverflow.com/questions/25430775/copy-mathml-into-word-to-use-as-equation"&gt;https://stackoverflow.com/questions/25430775/copy-mathml-into-word-to-use-as-equation&lt;/a&gt;.
Accessed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“Python - Output Sympy Equation to Word Using Mathml.” Stack Overflow,
&lt;a class="reference external" href="https://stackoverflow.com/questions/40921128/output-sympy-equation-to-word-using-mathml"&gt;https://stackoverflow.com/questions/40921128/output-sympy-equation-to-word-using-mathml&lt;/a&gt;.
Accessed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OERPUB (2016), “Mathconverter”, &lt;a class="reference external" href="https://github.com/oerpub/mathconverter"&gt;https://github.com/oerpub/mathconverter&lt;/a&gt;,
Accesed 3 Aug. 2020.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description><category>latex</category><category>libreoffice</category><category>math</category><category>ms-word</category><category>research</category><category>typography</category><category>writing</category><guid>https://nicoguaro.github.io/posts/tech_writing/tech_writing_math/</guid><pubDate>Thu, 28 May 2020 20:53:40 GMT</pubDate></item></channel></rss>